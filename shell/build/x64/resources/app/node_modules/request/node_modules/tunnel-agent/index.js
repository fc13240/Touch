"use strict";function httpOverHttp(e){var t=new TunnelingAgent(e);return t.request=http.request,t}function httpsOverHttp(e){var t=new TunnelingAgent(e);return t.request=http.request,t.createSocket=createSecureSocket,t.defaultPort=443,t}function httpOverHttps(e){var t=new TunnelingAgent(e);return t.request=https.request,t}function httpsOverHttps(e){var t=new TunnelingAgent(e);return t.request=https.request,t.createSocket=createSecureSocket,t.defaultPort=443,t}function TunnelingAgent(e){var t=this;t.options=e||{},t.proxyOptions=t.options.proxy||{},t.maxSockets=t.options.maxSockets||http.Agent.defaultMaxSockets,t.requests=[],t.sockets=[],t.on("free",function(e,n,r){for(var s=0,o=t.requests.length;o>s;++s){var u=t.requests[s];if(u.host===n&&u.port===r)return t.requests.splice(s,1),void u.request.onSocket(e)}e.destroy(),t.removeSocket(e)})}function createSecureSocket(e,t){var n=this;TunnelingAgent.prototype.createSocket.call(n,e,function(r){var s=tls.connect(0,mergeOptions({},n.options,{servername:e.host,socket:r}));n.sockets[n.sockets.indexOf(r)]=s,t(s)})}function mergeOptions(e){for(var t=1,n=arguments.length;n>t;++t){var r=arguments[t];if("object"==typeof r)for(var s=Object.keys(r),o=0,u=s.length;u>o;++o){var i=s[o];void 0!==r[i]&&(e[i]=r[i])}}return e}var net=require("net"),tls=require("tls"),http=require("http"),https=require("https"),events=require("events"),assert=require("assert"),util=require("util");exports.httpOverHttp=httpOverHttp,exports.httpsOverHttp=httpsOverHttp,exports.httpOverHttps=httpOverHttps,exports.httpsOverHttps=httpsOverHttps,util.inherits(TunnelingAgent,events.EventEmitter),TunnelingAgent.prototype.addRequest=function(e,t){var n=this;return"string"==typeof t&&(t={host:t,port:arguments[2],path:arguments[3]}),n.sockets.length>=this.maxSockets?void n.requests.push({host:t.host,port:t.port,request:e}):void n.createConnection({host:t.host,port:t.port,request:e})},TunnelingAgent.prototype.createConnection=function(e){var t=this;t.createSocket(e,function(n){function r(){t.emit("free",n,e.host,e.port)}function s(){t.removeSocket(n),n.removeListener("free",r),n.removeListener("close",s),n.removeListener("agentRemove",s)}n.on("free",r),n.on("close",s),n.on("agentRemove",s),e.request.onSocket(n)})},TunnelingAgent.prototype.createSocket=function(e,t){function n(e){e.upgrade=!0}function r(e,t,n){process.nextTick(function(){s(e,t,n)})}function s(n,r,s){if(a.removeAllListeners(),r.removeAllListeners(),200===n.statusCode)assert.equal(s.length,0),debug("tunneling connection has established"),u.sockets[u.sockets.indexOf(i)]=r,t(r);else{debug("tunneling socket could not be established, statusCode=%d",n.statusCode);var o=new Error("tunneling socket could not be established, statusCode="+n.statusCode);o.code="ECONNRESET",e.request.emit("error",o),u.removeSocket(i)}}function o(t){a.removeAllListeners(),debug("tunneling socket could not be established, cause=%s\n",t.message,t.stack);var n=new Error("tunneling socket could not be established, cause="+t.message);n.code="ECONNRESET",e.request.emit("error",n),u.removeSocket(i)}var u=this,i={};u.sockets.push(i);var c=mergeOptions({},u.proxyOptions,{method:"CONNECT",path:e.host+":"+e.port,agent:!1});c.proxyAuth&&(c.headers=c.headers||{},c.headers["Proxy-Authorization"]="Basic "+new Buffer(c.proxyAuth).toString("base64")),debug("making CONNECT request");var a=u.request(c);a.useChunkedEncodingByDefault=!1,a.once("response",n),a.once("upgrade",r),a.once("connect",s),a.once("error",o),a.end()},TunnelingAgent.prototype.removeSocket=function(e){var t=this.sockets.indexOf(e);if(-1!==t){this.sockets.splice(t,1);var n=this.requests.shift();n&&this.createConnection(n)}};var debug;debug=process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments);"string"==typeof e[0]?e[0]="TUNNEL: "+e[0]:e.unshift("TUNNEL:"),console.error.apply(console,e)}:function(){},exports.debug=debug;