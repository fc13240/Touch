function isCompatible(e,r,t){if(null===e||"object"!=typeof e)return!1;if(void 0===t&&(t=r.prototype._sshpkApiVersion),e instanceof r&&r.prototype._sshpkApiVersion[0]==t[0])return!0;for(var o=Object.getPrototypeOf(e),a=0;o.constructor.name!==r.name;)if(o=Object.getPrototypeOf(o),!o||++a>MAX_CLASS_DEPTH)return!1;if(o.constructor.name!==r.name)return!1;var i=o._sshpkApiVersion;return void 0===i&&(i=r._oldVersionDetect(e)),i[0]!=t[0]||i[1]<t[1]?!1:!0}function assertCompatible(e,r,t,o){if(void 0===o&&(o="object"),assert.ok(e,o+" must not be null"),assert.object(e,o+" must be an object"),void 0===t&&(t=r.prototype._sshpkApiVersion),!(e instanceof r&&r.prototype._sshpkApiVersion[0]==t[0])){for(var a=Object.getPrototypeOf(e),i=0;a.constructor.name!==r.name;)a=Object.getPrototypeOf(a),assert.ok(a&&++i<=MAX_CLASS_DEPTH,o+" must be a "+r.name+" instance");assert.strictEqual(a.constructor.name,r.name,o+" must be a "+r.name+" instance");var s=a._sshpkApiVersion;void 0===s&&(s=r._oldVersionDetect(e)),assert.ok(s[0]==t[0]&&s[1]>=t[1],o+" must be compatible with "+r.name+" klass version "+t[0]+"."+t[1])}}function countZeros(e){for(var r=0,t=8;r<e.length;){var o=1<<t;if((e[r]&o)===o)break;t--,0>t&&(r++,t=8)}return 8*r+(8-t)-1}function bufferSplit(e,r){assert.buffer(e),assert.string(r);for(var t=[],o=0,a=0,i=0;i<e.length;++i)if(e[i]===r.charCodeAt(a)?++a:a=e[i]===r.charCodeAt(0)?1:0,a>=r.length){var s=i+1;t.push(e.slice(o,s-a)),o=s,a=0}return o<=e.length&&t.push(e.slice(o,e.length)),t}function ecNormalize(e,r){if(assert.buffer(e),0===e[0]&&4===e[1])return r?e:e.slice(1);if(4===e[0]){if(!r)return e}else{for(;0===e[0];)e=e.slice(1);if(2===e[0]||3===e[0])throw new Error("Compressed elliptic curve points are not supported");if(4!==e[0])throw new Error("Not a valid elliptic curve point");if(!r)return e}var t=new Buffer(e.length+1);return t[0]=0,e.copy(t,1),t}function mpNormalize(e){for(assert.buffer(e);e.length>1&&0===e[0]&&0===(128&e[1]);)e=e.slice(1);if(128===(128&e[0])){var r=new Buffer(e.length+1);r[0]=0,e.copy(r,1),e=r}return e}function bigintToMpBuf(e){var r=new Buffer(e.toByteArray());return r=mpNormalize(r)}function calculateDSAPublic(e,r,t){assert.buffer(e),assert.buffer(r),assert.buffer(t);try{var o=require("jsbn").BigInteger}catch(a){throw new Error("To load a PKCS#8 format DSA private key, the node jsbn library is required.")}e=new o(e),r=new o(r),t=new o(t);var i=e.modPow(t,r),s=bigintToMpBuf(i);return s}function addRSAMissing(e){assert.object(e),assertCompatible(e,PrivateKey,[1,1]);try{var r=require("jsbn").BigInteger}catch(t){throw new Error("To write a PEM private key from this source, the node jsbn lib is required.")}var o,a=new r(e.part.d.data);if(!e.part.dmodp){var i=new r(e.part.p.data),s=a.mod(i.subtract(1));o=bigintToMpBuf(s),e.part.dmodp={name:"dmodp",data:o},e.parts.push(e.part.dmodp)}if(!e.part.dmodq){var n=new r(e.part.q.data),p=a.mod(n.subtract(1));o=bigintToMpBuf(p),e.part.dmodq={name:"dmodq",data:o},e.parts.push(e.part.dmodq)}}module.exports={bufferSplit:bufferSplit,addRSAMissing:addRSAMissing,calculateDSAPublic:calculateDSAPublic,mpNormalize:mpNormalize,ecNormalize:ecNormalize,countZeros:countZeros,assertCompatible:assertCompatible,isCompatible:isCompatible};var assert=require("assert-plus"),PrivateKey=require("./private-key"),MAX_CLASS_DEPTH=3;