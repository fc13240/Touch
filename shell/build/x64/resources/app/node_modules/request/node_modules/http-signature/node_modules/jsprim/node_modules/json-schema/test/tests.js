function loadSchema(e){var s=fs.readFileSync(e,"utf-8"),a=JSON.parse(s);return a}function resultIsValid(){return function(e){assert.isObject(e),assert.equal(typeof e.valid,"boolean"),assert.isArray(e.errors);for(var s=0;s<e.errors.length;s++)assert.notEqual(e.errors[s],null,"errors["+s+"] is null")}}function assertValidates(e,s){var a={};return a[": validate("+e+", "+s+")"]={topic:validate(schemas[e],schemas[s]),"returns valid result":resultIsValid(),"with valid=true":function(e){assert.equal(e.valid,!0)},"and no errors":function(e){null==e.errors[0]&&assert.fail("(errors contains null)"),assert.length(e.errors,0)}},a}function assertSelfValidates(e){var s={};return s[": validate("+e+")"]={topic:validate(schemas[e]),"returns valid result":resultIsValid(),"with valid=true":function(e){assert.equal(e.valid,!0)},"and no errors":function(e){assert.length(e.errors,0)}},s}var assert=require("assert"),vows=require("vows"),path=require("path"),fs=require("fs"),validate=require("../lib/validate").validate,revision="draft-03",schemaRoot=path.join(__dirname,"..",revision),schemaNames=["schema","hyper-schema","links","json-ref"],schemas={};schemaNames.forEach(function(e){var s=path.join(schemaRoot,e);schemas[e]=loadSchema(s)}),schemaNames.forEach(function(e){var s,a=e+"-nsd",r=path.join(schemaRoot,e);schemas[a]=loadSchema(r),s=schemas[a],delete s.$schema});var suite=vows.describe("JSON Schema").addBatch({"Core-NSD self-validates":assertSelfValidates("schema-nsd"),"Core-NSD/Core-NSD":assertValidates("schema-nsd","schema-nsd"),"Core-NSD/Core":assertValidates("schema-nsd","schema"),"Core self-validates":assertSelfValidates("schema"),"Core/Core":assertValidates("schema","schema"),"Hyper-NSD self-validates":assertSelfValidates("hyper-schema-nsd"),"Hyper self-validates":assertSelfValidates("hyper-schema"),"Hyper/Hyper":assertValidates("hyper-schema","hyper-schema"),"Hyper/Core":assertValidates("hyper-schema","schema"),"Links-NSD self-validates":assertSelfValidates("links-nsd"),"Links self-validates":assertSelfValidates("links"),"Links/Hyper":assertValidates("links","hyper-schema"),"Links/Core":assertValidates("links","schema"),"Json-Ref self-validates":assertSelfValidates("json-ref"),"Json-Ref/Hyper":assertValidates("json-ref","hyper-schema"),"Json-Ref/Core":assertValidates("json-ref","schema")}).export(module);