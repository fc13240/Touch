; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
 
; #define MyAppName "蓝PI蚂蚁制图"
; #define MyAppVersion "1.8"
; #define MyAppPublisher "北京华风创新网络技术有限公司"
; #define MyAppURL "http://www.tianqi.com/"
; #define MyAppExeName "GraphTool.exe"
; #define MyArch "x64"
; #defind MyOutputDir  "F:\source\node_projects\GraphTool\shell\build2\release"
; #defind MyOutputBaseFilename "BPA-GT"
; #defind MySetupIconFile "F:\source\node_projects\GraphTool\shell\build2\resource\BPA.ico"
; #defind MySource "F:\source\node_projects\GraphTool\shell\build2\dest64"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
;AppId={{A6186F4B-A06D-4919-9FBC-9016AACE94AB}
AppId={#MyAppId}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultGroupName={#MyAppName}
DefaultDirName={pf}\{#MyDefaultDirName}
DisableProgramGroupPage=yes
OutputDir={#MyOutputDir}
OutputBaseFilename={#MyOutputBaseFilename}
SetupIconFile={#MySetupIconFile}
Compression=lzma
SolidCompression=yes
DisableDirPage=auto
;DisableProgramGroupPage=auto

[Languages]
Name: "simplifiedChinese"; MessagesFile: "compiler:Languages\zh-cn.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}";
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1

[Files]
;Source: "F:\source\node_projects\GraphTool\shell\build2\dest64\GraphTool.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#MySource}\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs;
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{commonprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: quicklaunchicon
;Name: "{group}\Uninstall {#MyAppName}"; Filename: "{uninstallexe}" 

[Registry]
;Root: HKLM32; Subkey: "SOFTWARE\BPA\GT"; ValueName: "base_path GT"; ValueType: none; Flags: deletevalue;
;Root: HKLM64; Subkey: "SOFTWARE\BPA\GT"; ValueName: "base_path GT"; ValueType: none; Flags: deletevalue;

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[UninstallRun]

[UninstallDelete]
Type: "filesandordirs"; Name: "{app}"

[Code]
var
  V: string;
  RegValOld: string;

function GetHKLM: Integer;
begin
  if IsWin64 then
    Result := HKLM64
  else
    Result := HKLM32;
end;

function GetRegVOld: boolean;
begin
  if RegQueryStringValue(GetHKLM(), 'SOFTWARE\BPA\Touch', 'base_path Touch', RegValOld) then
    Result := True;
end;

function GetRegNew: boolean;
var
  S: string;
begin
  S := '{#SetupSetting("AppId")}';
  S := Copy(S, 3, Length(S) - 3);
  if RegQueryStringValue(HKEY_LOCAL_MACHINE, 'Software\Microsoft\Windows\CurrentVersion\Uninstall\{'+S+'}_is1', 'UninstallString', V) then
  begin
    Result := True;
  end;
end;

function InitializeSetup: boolean;    
begin
  if IsWin64 then
  begin
    if ExpandConstant('{#MyArch}') = 'ia32' then
    begin
      MsgBox('您的操作系统不是32位！', mbInformation, MB_OK);
      Result := False;
      exit;
    end;  
  end
  else 
  begin
    if ExpandConstant('{#MyArch}') = 'x64' then
    begin
      MsgBox('您的操作系统不是64位！', mbInformation, MB_OK);
      Result := False;
      exit;
    end;
  end;
  Result := True;
end;

procedure InitializeWizard();
begin
  if not GetRegNew() and GetRegVOld() then
  begin
     WizardForm.DirEdit.Text := RegValOld;
     WizardForm.DirEdit.Enabled := False;
     WizardForm.DirBrowseButton.Enabled := False;
  end;
end;

function ShouldSkipPage(PageID: Integer): Boolean;
begin
  Result := False;
  if (PageID = wpSelectDir) and not GetRegNew() and GetRegVOld() then
    Result := True;
  if PageId = wpSelectTasks then
    Result := True;
  if PageId = wpFinished then
    RegDeleteKeyIncludingSubkeys(GetHKLM(), 'SOFTWARE\BPA\Touch');
end;