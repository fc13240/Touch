function jsonify(e){return JSON.stringify(e,null,2)}function bangString(e,i){return"string"==typeof i?i+"!":i}var Sinon=require("sinon"),stringify=require("..");describe("Stringify",function(){it("must stringify circular objects",function(){var e={name:"Alice"};e.self=e;var i=stringify(e,null,2);i.must.eql(jsonify({name:"Alice",self:"[Circular ~]"}))}),it("must stringify circular objects with intermediaries",function(){var e={name:"Alice"};e.identity={self:e};var i=stringify(e,null,2);i.must.eql(jsonify({name:"Alice",identity:{self:"[Circular ~]"}}))}),it("must stringify circular objects deeper",function(){var e={name:"Alice",child:{name:"Bob"}};e.child.self=e.child,stringify(e,null,2).must.eql(jsonify({name:"Alice",child:{name:"Bob",self:"[Circular ~.child]"}}))}),it("must stringify circular objects deeper with intermediaries",function(){var e={name:"Alice",child:{name:"Bob"}};e.child.identity={self:e.child},stringify(e,null,2).must.eql(jsonify({name:"Alice",child:{name:"Bob",identity:{self:"[Circular ~.child]"}}}))}),it("must stringify circular objects in an array",function(){var e={name:"Alice"};e.self=[e,e],stringify(e,null,2).must.eql(jsonify({name:"Alice",self:["[Circular ~]","[Circular ~]"]}))}),it("must stringify circular objects deeper in an array",function(){var e={name:"Alice",children:[{name:"Bob"},{name:"Eve"}]};e.children[0].self=e.children[0],e.children[1].self=e.children[1],stringify(e,null,2).must.eql(jsonify({name:"Alice",children:[{name:"Bob",self:"[Circular ~.children.0]"},{name:"Eve",self:"[Circular ~.children.1]"}]}))}),it("must stringify circular arrays",function(){var e=[];e.push(e),e.push(e);var i=stringify(e,null,2);i.must.eql(jsonify(["[Circular ~]","[Circular ~]"]))}),it("must stringify circular arrays with intermediaries",function(){var e=[];e.push({name:"Alice",self:e}),e.push({name:"Bob",self:e}),stringify(e,null,2).must.eql(jsonify([{name:"Alice",self:"[Circular ~]"},{name:"Bob",self:"[Circular ~]"}]))}),it("must stringify repeated objects in objects",function(){var e={},i={name:"Alice"};e.alice1=i,e.alice2=i,stringify(e,null,2).must.eql(jsonify({alice1:{name:"Alice"},alice2:{name:"Alice"}}))}),it("must stringify repeated objects in arrays",function(){var e={name:"Alice"},i=[e,e],l=stringify(i,null,2);l.must.eql(jsonify([{name:"Alice"},{name:"Alice"}]))}),it("must call given decycler and use its output",function(){var e={};e.a=e,e.b=e;var i=Sinon.spy(function(){return i.callCount}),l=stringify(e,null,2,i);l.must.eql(jsonify({a:1,b:2},null,2)),i.callCount.must.equal(2),i.thisValues[0].must.equal(e),i.args[0][0].must.equal("a"),i.args[0][1].must.equal(e),i.thisValues[1].must.equal(e),i.args[1][0].must.equal("b"),i.args[1][1].must.equal(e)}),it("must call replacer and use its output",function(){var e={name:"Alice",child:{name:"Bob"}},i=Sinon.spy(bangString),l=stringify(e,i,2);l.must.eql(jsonify({name:"Alice!",child:{name:"Bob!"}})),i.callCount.must.equal(4),i.args[0][0].must.equal(""),i.args[0][1].must.equal(e),i.thisValues[1].must.equal(e),i.args[1][0].must.equal("name"),i.args[1][1].must.equal("Alice"),i.thisValues[2].must.equal(e),i.args[2][0].must.equal("child"),i.args[2][1].must.equal(e.child),i.thisValues[3].must.equal(e.child),i.args[3][0].must.equal("name"),i.args[3][1].must.equal("Bob")}),it("must call replacer after describing circular references",function(){var e={name:"Alice"};e.self=e;var i=Sinon.spy(bangString),l=stringify(e,i,2);l.must.eql(jsonify({name:"Alice!",self:"[Circular ~]!"})),i.callCount.must.equal(3),i.args[0][0].must.equal(""),i.args[0][1].must.equal(e),i.thisValues[1].must.equal(e),i.args[1][0].must.equal("name"),i.args[1][1].must.equal("Alice"),i.thisValues[2].must.equal(e),i.args[2][0].must.equal("self"),i.args[2][1].must.equal("[Circular ~]")}),it("must call given decycler and use its output for nested objects",function(){var e={};e.a=e,e.b={self:e};var i=Sinon.spy(function(){return i.callCount}),l=stringify(e,null,2,i);l.must.eql(jsonify({a:1,b:{self:2}})),i.callCount.must.equal(2),i.args[0][0].must.equal("a"),i.args[0][1].must.equal(e),i.args[1][0].must.equal("self"),i.args[1][1].must.equal(e)}),it("must use decycler's output when it returned null",function(){function e(){return null}var i={a:"b"};i.self=i,i.selves=[i,i],stringify(i,null,2,e).must.eql(jsonify({a:"b",self:null,selves:[null,null]}))}),it("must use decycler's output when it returned undefined",function(){function e(){}var i={a:"b"};i.self=i,i.selves=[i,i],stringify(i,null,2,e).must.eql(jsonify({a:"b",selves:[null,null]}))}),it("must throw given a decycler that returns a cycle",function(){function e(e,i){return i}var i={};i.self=i;var l;try{stringify(i,null,2,e)}catch(n){l=n}l.must.be.an.instanceof(TypeError)}),describe(".getSerialize",function(){it("must stringify circular objects",function(){var e={a:"b"};e.circularRef=e,e.list=[e,e];var i=JSON.stringify(e,stringify.getSerialize(),2);i.must.eql(jsonify({a:"b",circularRef:"[Circular ~]",list:["[Circular ~]","[Circular ~]"]}))}),xit("must return a function that could be called twice",function(){var e={name:"Alice"};e.self=e;var i,l=stringify.getSerialize();i=JSON.stringify(e,l,2),i.must.eql(jsonify({name:"Alice",self:"[Circular ~]"})),i=JSON.stringify(e,l,2),i.must.eql(jsonify({name:"Alice",self:"[Circular ~]"}))})})});