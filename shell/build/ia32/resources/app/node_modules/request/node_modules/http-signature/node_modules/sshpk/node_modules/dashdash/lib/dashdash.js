function renderTemplate(r,e){return r.replace(/{{([a-zA-Z]+)}}/g,function(r,t){return e.hasOwnProperty(t)?e[t]:r})}function shallowCopy(r){if(!r)return r;var e={};return Object.keys(r).forEach(function(t){e[t]=r[t]}),e}function space(r){for(var e="",t=0;r>t;t++)e+=" ";return e}function makeIndent(r,e,t){return null===r||void 0===r?space(e):"number"==typeof r?space(r):"string"==typeof r?r:void assert.fail('invalid "'+t+'": not a string or number: '+r)}function textwrap(r,e){var t=r.trim().split(/\s+/),o=[],n="";return t.forEach(function(r){var t=n.length+r.length;n.length>0&&(t+=1),t>e&&(o.push(n),n=""),n.length>0&&(n+=" "),n+=r}),o.push(n),o}function optionKeyFromName(r){return r.replace(/-/g,"_")}function parseBool(r,e,t){return Boolean(t)}function parseString(r,e,t){return assert.string(t,"arg"),t}function parseNumber(r,e,t){assert.string(t,"arg");var o=Number(t);if(isNaN(o))throw new Error(format('arg for "%s" is not a number: "%s"',e,t));return o}function parseInteger(r,e,t){assert.string(t,"arg");var o=Number(t);if(!/^[0-9-]+$/.test(t)||isNaN(o))throw new Error(format('arg for "%s" is not an integer: "%s"',e,t));return o}function parsePositiveInteger(r,e,t){assert.string(t,"arg");var o=Number(t);if(!/^[0-9]+$/.test(t)||isNaN(o)||0===o)throw new Error(format('arg for "%s" is not a positive integer: "%s"',e,t));return o}function parseDate(r,e,t){assert.string(t,"arg");var o;if(/^\d+$/.test(t))o=new Date(1e3*Number(t));else{if(!/^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?Z?)?$/i.test(t))throw new Error(format('arg for "%s" is not a valid date format: "%s"',e,t));o=new Date(t)}if("Invalid Date"===o.toString())throw new Error(format('arg for "%s" is an invalid date: "%s"',e,t));return o}function Parser(r){assert.object(r,"config"),assert.arrayOfObject(r.options,"config.options"),assert.optionalBool(r.interspersed,"config.interspersed");var e=this;this.interspersed=void 0!==r.interspersed?r.interspersed:!0,this.allowUnknown=void 0!==r.allowUnknown?r.allowUnknown:!1,this.options=r.options.map(function(r){return shallowCopy(r)}),this.optionFromName={},this.optionFromEnv={};for(var t=0;t<this.options.length;t++){var o=this.options[t];if(void 0===o.group||null===o.group){assert.ok(optionTypes[o.type],format('invalid config.options.%d.type: "%s" in %j',t,o.type,o)),assert.optionalString(o.name,format("config.options.%d.name",t)),assert.optionalArrayOfString(o.names,format("config.options.%d.names",t)),assert.ok((o.name||o.names)&&!(o.name&&o.names),format('exactly one of "name" or "names" required: %j',o)),assert.optionalString(o.help,format("config.options.%d.help",t));var n=o.env||[];"string"==typeof n&&(n=[n]),assert.optionalArrayOfString(n,format("config.options.%d.env",t)),assert.optionalString(o.helpGroup,format("config.options.%d.helpGroup",t)),assert.optionalBool(o.helpWrap,format("config.options.%d.helpWrap",t)),assert.optionalBool(o.hidden,format("config.options.%d.hidden",t)),o.name?o.names=[o.name]:assert.string(o.names[0],format("config.options.%d.names is empty",t)),o.key=optionKeyFromName(o.names[0]),o.names.forEach(function(r){if(e.optionFromName[r])throw new Error(format('option name collision: "%s" used in %j and %j',r,e.optionFromName[r],o));e.optionFromName[r]=o}),n.forEach(function(r){if(e.optionFromEnv[r])throw new Error(format('option env collision: "%s" used in %j and %j',r,e.optionFromEnv[r],o));e.optionFromEnv[r]=o})}else assert.optionalString(o.group,format("config.options.%d.group",t))}}function bashCompletionSpecFromOptions(r){assert.object(r,"args"),assert.object(r.options,"args.options"),assert.optionalString(r.context,"args.context"),assert.optionalBool(r.includeHidden,"args.includeHidden"),assert.optionalArrayOfString(r.argtypes,"args.argtypes");var e=r.context||"",t=void 0===r.includeHidden?!1:r.includeHidden,o=[],n=[],a=[],s=[];return(r.options||[]).forEach(function(r){if(!r.group){var e=r.names||[r.name],o=getOptionType(r.type);if(o.takesArg){var i=r.completionType||o.completionType||r.type;e.forEach(function(e){1===e.length?((t||!r.hidden)&&n.push("-"+e),s.push("-"+e+"="+i)):((t||!r.hidden)&&a.push("--"+e),s.push("--"+e+"="+i))})}else e.forEach(function(e){(t||!r.hidden)&&(1===e.length?n.push("-"+e):a.push("--"+e))})}}),o.push(format('local cmd%s_shortopts="%s"',e,n.sort().join(" "))),o.push(format('local cmd%s_longopts="%s"',e,a.sort().join(" "))),o.push(format('local cmd%s_optargs="%s"',e,s.sort().join(" "))),r.argtypes&&o.push(format('local cmd%s_argtypes="%s"',e,r.argtypes.join(" "))),o.join("\n")}function bashCompletionFromOptions(r){assert.object(r,"args"),assert.object(r.options,"args.options"),assert.string(r.name,"args.name"),assert.optionalString(r.specExtra,"args.specExtra"),assert.optionalArrayOfString(r.argtypes,"args.argtypes");var e={name:r.name,date:new Date,spec:bashCompletionSpecFromOptions({options:r.options,argtypes:r.argtypes})};r.specExtra&&(e.spec+="\n\n"+r.specExtra);var t=fs.readFileSync(BASH_COMPLETION_TEMPLATE_PATH,"utf8");return renderTemplate(t,e)}function createParser(r){return new Parser(r)}function parse(r){assert.object(r,"config"),assert.optionalArrayOfString(r.argv,"config.argv"),assert.optionalObject(r.env,"config.env");var r=shallowCopy(r),e=r.argv;delete r.argv;var t=r.env;delete r.env;var o=new Parser(r);return o.parse({argv:e,env:t})}function addOptionType(r){assert.object(r,"optionType"),assert.string(r.name,"optionType.name"),assert.bool(r.takesArg,"optionType.takesArg"),r.takesArg&&assert.string(r.helpArg,"optionType.helpArg"),assert.func(r.parseArg,"optionType.parseArg"),assert.optionalBool(r.array,"optionType.array"),assert.optionalBool(r.arrayFlatten,"optionType.arrayFlatten"),optionTypes[r.name]={takesArg:r.takesArg,helpArg:r.helpArg,parseArg:r.parseArg,array:r.array,arrayFlatten:r.arrayFlatten,"default":r.default}}function getOptionType(r){return assert.string(r,"name"),optionTypes[r]}var assert=require("assert-plus"),format=require("util").format,fs=require("fs"),path=require("path"),DEBUG=!0;if(DEBUG)var debug=console.warn;else var debug=function(){};var optionTypes={bool:{takesArg:!1,parseArg:parseBool},string:{takesArg:!0,helpArg:"ARG",parseArg:parseString},number:{takesArg:!0,helpArg:"NUM",parseArg:parseNumber},integer:{takesArg:!0,helpArg:"INT",parseArg:parseInteger},positiveInteger:{takesArg:!0,helpArg:"INT",parseArg:parsePositiveInteger},date:{takesArg:!0,helpArg:"DATE",parseArg:parseDate},arrayOfBool:{takesArg:!1,array:!0,parseArg:parseBool},arrayOfString:{takesArg:!0,helpArg:"ARG",array:!0,parseArg:parseString},arrayOfNumber:{takesArg:!0,helpArg:"NUM",array:!0,parseArg:parseNumber},arrayOfInteger:{takesArg:!0,helpArg:"INT",array:!0,parseArg:parseInteger},arrayOfPositiveInteger:{takesArg:!0,helpArg:"INT",array:!0,parseArg:parsePositiveInteger},arrayOfDate:{takesArg:!0,helpArg:"INT",array:!0,parseArg:parseDate}};Parser.prototype.optionTakesArg=function(r){return optionTypes[r.type].takesArg},Parser.prototype.parse=function(r){function e(r,e,t,o,n){var a=optionTypes[r.type],s=a.parseArg(r,e,o);if(a.array)if(i[t]||(i[t]=[]),a.arrayFlatten&&Array.isArray(s))for(var l=0;l<s.length;l++)i[t].push(s[l]);else i[t].push(s);else i[t]=s;var g={key:t,value:s,from:n};p.push(g)}var t=this;Array.isArray(arguments[0])&&(r={argv:arguments[0],slice:arguments[1]}),assert.optionalObject(r,"inputs"),r||(r={}),assert.optionalArrayOfString(r.argv,"inputs.argv");var o=r.argv||process.argv,n=void 0!==r.slice?r.slice:2,a=o.slice(n),s=r.env||process.env,i={},p=[],l=[],g=0;r:for(;g<a.length;){var f=a[g];if("--"===f){g++;break}if("--"===f.slice(0,2)){var u=f.slice(2),h=null,c=u.indexOf("=");-1!==c&&(h=u.slice(c+1),u=u.slice(0,c));var m=this.optionFromName[u];if(m){var d=this.optionTakesArg(m);if(null!==h&&!d)throw new Error(format('argument given to "--%s" option that does not take one: "%s"',u,f));if(d)if(null!==h)e(m,"--"+u,m.key,h,"argv");else{if(g+1>=a.length)throw new Error(format('do not have enough args for "--%s" option',u));e(m,"--"+u,m.key,a[g+1],"argv"),g++}else e(m,"--"+u,m.key,!0,"argv")}else{if(!this.allowUnknown)throw new Error(format('unknown option: "--%s"',u));if(!this.interspersed)break r;l.push(f)}}else if("-"===f[0]&&f.length>1){for(var v=1,y=!0;v<f.length;){var u=f[v],m=this.optionFromName[u];if(!m){if(y=!1,this.allowUnknown){if(this.interspersed){l.push(f);break}break r}throw new Error(f.length>2?format('unknown option: "-%s" in "%s" group',u,f):format('unknown option: "-%s"',u))}if(this.optionTakesArg(m))break;v++}for(v=1;y&&v<f.length;){var u=f[v],h=f.slice(v+1),m=this.optionFromName[u],d=this.optionTakesArg(m);if(d){if(h){e(m,"-"+u,m.key,h,"argv");break}if(g+1>=a.length)throw new Error(format('do not have enough args for "-%s" option',u));e(m,"-"+u,m.key,a[g+1],"argv"),g++;break}e(m,"-"+u,m.key,!0,"argv"),v++}}else{if(!this.interspersed)break r;l.push(f)}g++}return l=l.concat(a.slice(g)),Object.keys(this.optionFromEnv).forEach(function(r){var o=s[r];if(void 0!==o){var n=t.optionFromEnv[r];if(void 0===i[n.key]){var a=t.optionTakesArg(n);a?e(n,r,n.key,o,"env"):""!==o&&e(n,r,n.key,"0"!==o,"env")}}}),this.options.forEach(function(r){void 0===i[r.key]&&(void 0!==r.default?i[r.key]=r.default:r.type&&void 0!==optionTypes[r.type].default&&(i[r.key]=optionTypes[r.type].default))}),i._order=p,i._args=l,i},Parser.prototype.help=function(r){r=r||{},assert.object(r,"config");var e=makeIndent(r.indent,4,"config.indent"),t=makeIndent(r.headingIndent,Math.round(e.length/2),"config.headingIndent");assert.optionalString(r.nameSort,"config.nameSort");var o=r.nameSort||"length";assert.ok(~["length","none"].indexOf(o),'invalid "config.nameSort"'),assert.optionalNumber(r.maxCol,"config.maxCol"),assert.optionalNumber(r.maxHelpCol,"config.maxHelpCol"),assert.optionalNumber(r.minHelpCol,"config.minHelpCol"),assert.optionalNumber(r.helpCol,"config.helpCol"),assert.optionalBool(r.includeEnv,"config.includeEnv"),assert.optionalBool(r.includeDefault,"config.includeDefault"),assert.optionalBool(r.helpWrap,"config.helpWrap");var n=r.maxCol||80,a=r.minHelpCol||20,s=r.maxHelpCol||40,i=[],p=0;this.options.forEach(function(r){if(!r.hidden){if(void 0!==r.group&&null!==r.group)return void i.push(null);var e=optionTypes[r.type],t=r.helpArg||e.helpArg||"ARG",n="",a=r.names.slice();"length"===o&&a.sort(function(r,e){return r.length<e.length?-1:e.length<r.length?1:0}),a.forEach(function(r,o){o>0&&(n+=", "),1===r.length?(n+="-"+r,e.takesArg&&(n+=" "+t)):(n+="--"+r,e.takesArg&&(n+="="+t))}),p=Math.max(p,n.length),i.push(n)}});var l=r.helpCol;l||(l=p+e.length+2,l=Math.min(Math.max(l,a),s));var g=-1;this.options.forEach(function(o){if(!o.hidden){if(g++,void 0!==o.group&&null!==o.group)return void(i[g]=""===o.group?"":(0===g?"":"\n")+t+o.group+":");var a;r.includeDefault&&(void 0!==o.default?a=format("Default: %j",o.default):o.type&&void 0!==optionTypes[o.type].default&&(a=format("Default: %j",optionTypes[o.type].default)));var s=i[g]=e+i[g];if(o.help||r.includeEnv&&o.env||a){var p=l-s.length;s+=p>=0?space(p):"\n"+space(l);var f="";if(o.env&&o.env.length&&r.includeEnv){f+="Environment: ";var u=optionTypes[o.type],h=o.helpArg||u.helpArg||"ARG",c=(Array.isArray(o.env)?o.env:[o.env]).map(function(r){return u.takesArg?r+"="+h:r+"=1"});f+=c.join(", ")}var m=(o.help||"").trim();if(o.helpWrap!==!1&&r.helpWrap!==!1)m.length&&!~".!?\"'".indexOf(m.slice(-1))&&(m+="."),m.length&&(m+=" "),m+=f,a&&(f&&(m+=". "),m+=a),s+=textwrap(m,n-l).join("\n"+space(l));else{var d=m.split("\n").filter(function(r){return r.length});""!==f&&d.push(f),a&&d.push(a),s+=d.join("\n"+space(l))}i[g]=s}}});var f="";return i.length>0&&(f=i.join("\n")+"\n"),f},Parser.prototype.bashCompletion=function(r){return assert.object(r,"args"),assert.string(r.name,"args.name"),assert.optionalString(r.specExtra,"args.specExtra"),assert.optionalArrayOfString(r.argtypes,"args.argtypes"),bashCompletionFromOptions({name:r.name,specExtra:r.specExtra,argtypes:r.argtypes,options:this.options})};const BASH_COMPLETION_TEMPLATE_PATH=path.join(__dirname,"../etc/dashdash.bash_completion.in");module.exports={createParser:createParser,Parser:Parser,parse:parse,addOptionType:addOptionType,getOptionType:getOptionType,BASH_COMPLETION_TEMPLATE_PATH:BASH_COMPLETION_TEMPLATE_PATH,bashCompletionFromOptions:bashCompletionFromOptions,bashCompletionSpecFromOptions:bashCompletionSpecFromOptions,parseBool:parseBool,parseString:parseString,parseNumber:parseNumber,parseInteger:parseInteger,parsePositiveInteger:parsePositiveInteger,parseDate:parseDate};