function ECFieldElementFp(t,e){this.x=e,this.q=t}function feFpEquals(t){return t==this?!0:this.q.equals(t.q)&&this.x.equals(t.x)}function feFpToBigInteger(){return this.x}function feFpNegate(){return new ECFieldElementFp(this.q,this.x.negate().mod(this.q))}function feFpAdd(t){return new ECFieldElementFp(this.q,this.x.add(t.toBigInteger()).mod(this.q))}function feFpSubtract(t){return new ECFieldElementFp(this.q,this.x.subtract(t.toBigInteger()).mod(this.q))}function feFpMultiply(t){return new ECFieldElementFp(this.q,this.x.multiply(t.toBigInteger()).mod(this.q))}function feFpSquare(){return new ECFieldElementFp(this.q,this.x.square().mod(this.q))}function feFpDivide(t){return new ECFieldElementFp(this.q,this.x.multiply(t.toBigInteger().modInverse(this.q)).mod(this.q))}function ECPointFp(t,e,i,r){this.curve=t,this.x=e,this.y=i,this.z=null==r?BigInteger.ONE:r,this.zinv=null}function pointFpGetX(){null==this.zinv&&(this.zinv=this.z.modInverse(this.curve.q));var t=this.x.toBigInteger().multiply(this.zinv);return this.curve.reduce(t),this.curve.fromBigInteger(t)}function pointFpGetY(){null==this.zinv&&(this.zinv=this.z.modInverse(this.curve.q));var t=this.y.toBigInteger().multiply(this.zinv);return this.curve.reduce(t),this.curve.fromBigInteger(t)}function pointFpEquals(t){if(t==this)return!0;if(this.isInfinity())return t.isInfinity();if(t.isInfinity())return this.isInfinity();var e,i;return e=t.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(t.z)).mod(this.curve.q),e.equals(BigInteger.ZERO)?(i=t.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(t.z)).mod(this.curve.q),i.equals(BigInteger.ZERO)):!1}function pointFpIsInfinity(){return null==this.x&&null==this.y?!0:this.z.equals(BigInteger.ZERO)&&!this.y.toBigInteger().equals(BigInteger.ZERO)}function pointFpNegate(){return new ECPointFp(this.curve,this.x,this.y.negate(),this.z)}function pointFpAdd(t){if(this.isInfinity())return t;if(t.isInfinity())return this;var e=t.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(t.z)).mod(this.curve.q),i=t.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(t.z)).mod(this.curve.q);if(BigInteger.ZERO.equals(i))return BigInteger.ZERO.equals(e)?this.twice():this.curve.getInfinity();var r=new BigInteger("3"),n=this.x.toBigInteger(),u=this.y.toBigInteger(),s=(t.x.toBigInteger(),t.y.toBigInteger(),i.square()),o=s.multiply(i),l=n.multiply(s),p=e.square().multiply(this.z),h=p.subtract(l.shiftLeft(1)).multiply(t.z).subtract(o).multiply(i).mod(this.curve.q),g=l.multiply(r).multiply(e).subtract(u.multiply(o)).subtract(p.multiply(e)).multiply(t.z).add(e.multiply(o)).mod(this.curve.q),c=o.multiply(this.z).multiply(t.z).mod(this.curve.q);return new ECPointFp(this.curve,this.curve.fromBigInteger(h),this.curve.fromBigInteger(g),c)}function pointFpTwice(){if(this.isInfinity())return this;if(0==this.y.toBigInteger().signum())return this.curve.getInfinity();var t=new BigInteger("3"),e=this.x.toBigInteger(),i=this.y.toBigInteger(),r=i.multiply(this.z),n=r.multiply(i).mod(this.curve.q),u=this.curve.a.toBigInteger(),s=e.square().multiply(t);BigInteger.ZERO.equals(u)||(s=s.add(this.z.square().multiply(u))),s=s.mod(this.curve.q);var o=s.square().subtract(e.shiftLeft(3).multiply(n)).shiftLeft(1).multiply(r).mod(this.curve.q),l=s.multiply(t).multiply(e).subtract(n.shiftLeft(1)).shiftLeft(2).multiply(n).subtract(s.square().multiply(s)).mod(this.curve.q),p=r.square().multiply(r).shiftLeft(3).mod(this.curve.q);return new ECPointFp(this.curve,this.curve.fromBigInteger(o),this.curve.fromBigInteger(l),p)}function pointFpMultiply(t){if(this.isInfinity())return this;if(0==t.signum())return this.curve.getInfinity();var e,i=t,r=i.multiply(new BigInteger("3")),n=this.negate(),u=this;for(e=r.bitLength()-2;e>0;--e){u=u.twice();var s=r.testBit(e),o=i.testBit(e);s!=o&&(u=u.add(s?this:n))}return u}function pointFpMultiplyTwo(t,e,i){var r;r=t.bitLength()>i.bitLength()?t.bitLength()-1:i.bitLength()-1;for(var n=this.curve.getInfinity(),u=this.add(e);r>=0;)n=n.twice(),t.testBit(r)?n=n.add(i.testBit(r)?u:this):i.testBit(r)&&(n=n.add(e)),--r;return n}function ECCurveFp(t,e,i){this.q=t,this.a=this.fromBigInteger(e),this.b=this.fromBigInteger(i),this.infinity=new ECPointFp(this,null,null),this.reducer=new Barrett(this.q)}function curveFpGetQ(){return this.q}function curveFpGetA(){return this.a}function curveFpGetB(){return this.b}function curveFpEquals(t){return t==this?!0:this.q.equals(t.q)&&this.a.equals(t.a)&&this.b.equals(t.b)}function curveFpGetInfinity(){return this.infinity}function curveFpFromBigInteger(t){return new ECFieldElementFp(this.q,t)}function curveReduce(t){this.reducer.reduce(t)}function curveFpDecodePointHex(t){switch(parseInt(t.substr(0,2),16)){case 0:return this.infinity;case 2:case 3:return null;case 4:case 6:case 7:var e=(t.length-2)/2,i=t.substr(2,e),r=t.substr(e+2,e);return new ECPointFp(this,this.fromBigInteger(new BigInteger(i,16)),this.fromBigInteger(new BigInteger(r,16)));default:return null}}function curveFpEncodePointHex(t){if(t.isInfinity())return"00";var e=t.getX().toBigInteger().toString(16),i=t.getY().toBigInteger().toString(16),r=this.getQ().toString(16).length;for(r%2!=0&&r++;e.length<r;)e="0"+e;for(;i.length<r;)i="0"+i;return"04"+e+i}var BigInteger=require("jsbn").BigInteger,Barrett=BigInteger.prototype.Barrett;ECFieldElementFp.prototype.equals=feFpEquals,ECFieldElementFp.prototype.toBigInteger=feFpToBigInteger,ECFieldElementFp.prototype.negate=feFpNegate,ECFieldElementFp.prototype.add=feFpAdd,ECFieldElementFp.prototype.subtract=feFpSubtract,ECFieldElementFp.prototype.multiply=feFpMultiply,ECFieldElementFp.prototype.square=feFpSquare,ECFieldElementFp.prototype.divide=feFpDivide,ECPointFp.prototype.getX=pointFpGetX,ECPointFp.prototype.getY=pointFpGetY,ECPointFp.prototype.equals=pointFpEquals,ECPointFp.prototype.isInfinity=pointFpIsInfinity,ECPointFp.prototype.negate=pointFpNegate,ECPointFp.prototype.add=pointFpAdd,ECPointFp.prototype.twice=pointFpTwice,ECPointFp.prototype.multiply=pointFpMultiply,ECPointFp.prototype.multiplyTwo=pointFpMultiplyTwo,ECCurveFp.prototype.getQ=curveFpGetQ,ECCurveFp.prototype.getA=curveFpGetA,ECCurveFp.prototype.getB=curveFpGetB,ECCurveFp.prototype.equals=curveFpEquals,ECCurveFp.prototype.getInfinity=curveFpGetInfinity,ECCurveFp.prototype.fromBigInteger=curveFpFromBigInteger,ECCurveFp.prototype.reduce=curveReduce,ECCurveFp.prototype.encodePointHex=curveFpEncodePointHex,ECCurveFp.prototype.decodePointHex=function(t){var e;switch(parseInt(t.substr(0,2),16)){case 0:return this.infinity;case 2:e=!1;case 3:void 0==e&&(e=!0);var i=t.length-2,r=t.substr(2,i),n=this.fromBigInteger(new BigInteger(r,16)),u=n.multiply(n.square().add(this.getA())).add(this.getB()),s=u.sqrt();if(null==s)throw"Invalid point compression";var o=s.toBigInteger();return o.testBit(0)!=e&&(s=this.fromBigInteger(this.getQ().subtract(o))),new ECPointFp(this,n,s);case 4:case 6:case 7:var i=(t.length-2)/2,r=t.substr(2,i),l=t.substr(i+2,i);return new ECPointFp(this,this.fromBigInteger(new BigInteger(r,16)),this.fromBigInteger(new BigInteger(l,16)));default:return null}},ECCurveFp.prototype.encodeCompressedPointHex=function(t){if(t.isInfinity())return"00";var e=t.getX().toBigInteger().toString(16),i=this.getQ().toString(16).length;for(i%2!=0&&i++;e.length<i;)e="0"+e;var r;return r=t.getY().toBigInteger().isEven()?"02":"03",r+e},ECFieldElementFp.prototype.getR=function(){if(void 0!=this.r)return this.r;this.r=null;var t=this.q.bitLength();if(t>128){var e=this.q.shiftRight(t-64);-1==e.intValue()&&(this.r=BigInteger.ONE.shiftLeft(t).subtract(this.q))}return this.r},ECFieldElementFp.prototype.modMult=function(t,e){return this.modReduce(t.multiply(e))},ECFieldElementFp.prototype.modReduce=function(t){if(null!=this.getR()){for(var e=q.bitLength();t.bitLength()>e+1;){var i=t.shiftRight(e),r=t.subtract(i.shiftLeft(e));this.getR().equals(BigInteger.ONE)||(i=i.multiply(this.getR())),t=i.add(r)}for(;t.compareTo(q)>=0;)t=t.subtract(q)}else t=t.mod(q);return t},ECFieldElementFp.prototype.sqrt=function(){if(!this.q.testBit(0))throw"unsupported";if(this.q.testBit(1)){var t=new ECFieldElementFp(this.q,this.x.modPow(this.q.shiftRight(2).add(BigInteger.ONE),this.q));return t.square().equals(this)?t:null}var e=this.q.subtract(BigInteger.ONE),i=e.shiftRight(1);if(!this.x.modPow(i,this.q).equals(BigInteger.ONE))return null;var r,n,u=e.shiftRight(2),s=u.shiftLeft(1).add(BigInteger.ONE),o=this.x,l=modDouble(modDouble(o));do{var p;do p=new BigInteger(this.q.bitLength(),new SecureRandom);while(p.compareTo(this.q)>=0||!p.multiply(p).subtract(l).modPow(i,this.q).equals(e));var h=this.lucasSequence(p,o,s);if(r=h[0],n=h[1],this.modMult(n,n).equals(l))return n.testBit(0)&&(n=n.add(q)),n=n.shiftRight(1),new ECFieldElementFp(q,n)}while(r.equals(BigInteger.ONE)||r.equals(e));return null},ECFieldElementFp.prototype.lucasSequence=function(t,e,i){for(var r=i.bitLength(),n=i.getLowestSetBit(),u=BigInteger.ONE,s=BigInteger.TWO,o=t,l=BigInteger.ONE,p=BigInteger.ONE,h=r-1;h>=n+1;--h)l=this.modMult(l,p),i.testBit(h)?(p=this.modMult(l,e),u=this.modMult(u,o),s=this.modReduce(o.multiply(s).subtract(t.multiply(l))),o=this.modReduce(o.multiply(o).subtract(p.shiftLeft(1)))):(p=l,u=this.modReduce(u.multiply(s).subtract(l)),o=this.modReduce(o.multiply(s).subtract(t.multiply(l))),s=this.modReduce(s.multiply(s).subtract(l.shiftLeft(1))));l=this.modMult(l,p),p=this.modMult(l,e),u=this.modReduce(u.multiply(s).subtract(l)),s=this.modReduce(o.multiply(s).subtract(t.multiply(l))),l=this.modMult(l,p);for(var h=1;n>=h;++h)u=this.modMult(u,s),s=this.modReduce(s.multiply(s).subtract(l.shiftLeft(1))),l=this.modMult(l,l);return[u,s]};var exports={ECCurveFp:ECCurveFp,ECPointFp:ECPointFp,ECFieldElementFp:ECFieldElementFp};module.exports=exports;