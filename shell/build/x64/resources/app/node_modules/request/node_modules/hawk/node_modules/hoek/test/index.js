var Fs=require("fs"),Path=require("path"),Code=require("code"),Hoek=require("../lib"),Lab=require("lab"),internals={},lab=exports.lab=Lab.script(),describe=lab.experiment,it=lab.test,expect=Code.expect,nestedObj={v:[7,8,9],w:/^something$/gim,x:{a:[1,2,3],b:123456,c:new Date,d:/hi/gim,e:/hello/},y:"y",z:new Date(1378775452757)},dupsArray=[nestedObj,{z:"z"},nestedObj],reducedDupsArray=[nestedObj,{z:"z"}];describe("clone()",function(){it("clones a nested object",function(e){var t=nestedObj,o=Hoek.clone(t);expect(t).to.deep.equal(o),expect(t.z.getTime()).to.equal(o.z.getTime()),e()}),it("clones a null object",function(e){var t=Hoek.clone(null);expect(t).to.equal(null),e()}),it("should not convert undefined properties to null",function(e){var t={something:void 0},o=Hoek.clone(t);expect(typeof o.something).to.equal("undefined"),e()}),it("should not throw on circular reference",function(e){var t={};t.x=t;var o=function(){Hoek.clone(t)};expect(o).to.not.throw(),e()}),it("clones circular reference",function(e){var t={z:new Date};t.y=t;var o=Hoek.clone(t);expect(Object.keys(o.y)).to.deep.equal(Object.keys(t)),expect(o.z).to.not.equal(t.z),expect(o.y).to.not.equal(t.y),expect(o.y.z).to.not.equal(t.y.z),expect(o.y).to.equal(o),expect(o.y.y.y.y).to.equal(o),e()}),it("clones an object with a null prototype",function(e){var t=Object.create(null),o=Hoek.clone(t);expect(o).to.deep.equal(t),e()}),it("clones deeply nested object",function(e){var t={x:{y:{a:[1,2,3],b:123456,c:new Date,d:/hi/gim,e:/hello/}}},o=Hoek.clone(t);expect(t).to.deep.equal(o),expect(t.x.y.c.getTime()).to.equal(o.x.y.c.getTime()),e()}),it("clones arrays",function(e){var t=[1,2,3],o=Hoek.clone(t);expect(t).to.deep.equal(o),e()}),it("performs actual copy for shallow keys (no pass by reference)",function(e){var t=Hoek.clone(nestedObj),o=Hoek.clone(nestedObj);expect(t.z).to.not.equal(nestedObj.z),expect(t.z).to.not.equal(o.z),expect(t.w).to.not.equal(nestedObj.w),expect(t.w).to.not.equal(o.w),expect(t.v).to.not.equal(nestedObj.v),expect(t.v).to.not.equal(o.v),t.y=5,expect(t.y).to.not.equal(nestedObj.y),expect(t.y).to.not.equal(o.y),e()}),it("performs actual copy for deep keys (no pass by reference)",function(e){var t=Hoek.clone(nestedObj),o=Hoek.clone(nestedObj);expect(t.x.c).to.not.equal(nestedObj.x.c),expect(t.x.c).to.not.equal(o.x.c),expect(t.x.c.getTime()).to.equal(nestedObj.x.c.getTime()),expect(t.x.c.getTime()).to.equal(o.x.c.getTime()),e()}),it("copies functions with properties",function(e){var t={x:function(){return 1},y:{}};t.x.z="string in function",t.x.v=function(){return 2},t.y.u=t.x;var o=Hoek.clone(t);expect(o.x()).to.equal(1),expect(o.x.v()).to.equal(2),expect(o.y.u).to.equal(o.x),expect(o.x.z).to.equal("string in function"),e()}),it("should copy a buffer",function(e){var t={key:new Buffer([1,2,3,4,5]),cert:new Buffer([1,2,3,4,5,6,10])},o=Hoek.clone(t);expect(Buffer.isBuffer(o.key)).to.equal(!0),expect(JSON.stringify(o.key)).to.equal(JSON.stringify(t.key)),expect(Buffer.isBuffer(o.cert)).to.equal(!0),expect(JSON.stringify(o.cert)).to.equal(JSON.stringify(t.cert)),e()}),it("clones an object with a prototype",function(e){var t=function(){this.a=5};t.prototype.b=function(){return"c"};var o=new t,n=Hoek.clone(o);expect(n.a).to.equal(5),expect(n.b()).to.equal("c"),expect(o).to.deep.equal(n),e()}),it("reuses cloned Date object",function(e){var t={a:new Date};t.b=t.a;var o=Hoek.clone(t);expect(o.a).to.equal(o.b),e()}),it("shallow copies an object with a prototype and isImmutable flag",function(e){var t=function(){this.value=5};t.prototype.b=function(){return"c"},t.prototype.isImmutable=!0;var o={a:new t},n=Hoek.clone(o);expect(o.a.value).to.equal(5),expect(n.a.value).to.equal(5),expect(n.a.b()).to.equal("c"),expect(o.a).to.equal(n.a),e()}),it("clones an object with property getter without executing it",function(e){var t={},o=1,n=0;Object.defineProperty(t,"test",{enumerable:!0,configurable:!0,get:function(){return++n,o}});var a=Hoek.clone(t);expect(n).to.equal(0),expect(a.test).to.equal(1),expect(n).to.equal(1),e()}),it("clones an object with property getter and setter",function(e){var t={_test:0};Object.defineProperty(t,"test",{enumerable:!0,configurable:!0,get:function(){return this._test},set:function(e){this._test=e-1}});var o=Hoek.clone(t);expect(o.test).to.equal(0),o.test=5,expect(o.test).to.equal(4),e()}),it("clones an object with only property setter",function(e){var t={_test:0};Object.defineProperty(t,"test",{enumerable:!0,configurable:!0,set:function(e){this._test=e-1}});var o=Hoek.clone(t);expect(o._test).to.equal(0),o.test=5,expect(o._test).to.equal(4),e()}),it("clones an object with non-enumerable properties",function(e){var t={_test:0};Object.defineProperty(t,"test",{enumerable:!1,configurable:!0,set:function(e){this._test=e-1}});var o=Hoek.clone(t);expect(o._test).to.equal(0),o.test=5,expect(o._test).to.equal(4),e()}),it("clones an object where getOwnPropertyDescriptor returns undefined",function(e){var t=Object.getOwnPropertyDescriptor,o={a:"b"};Object.getOwnPropertyDescriptor=function(){return void 0};var n=Hoek.clone(o);Object.getOwnPropertyDescriptor=t,expect(n).to.deep.equal(o),e()})}),describe("merge()",function(){it("deep copies source items",function(e){var t={b:3,d:[]},o={c:{d:1},d:[{e:1}]};Hoek.merge(t,o),expect(t.c).to.not.equal(o.c),expect(t.c).to.deep.equal(o.c),expect(t.d).to.not.equal(o.d),expect(t.d[0]).to.not.equal(o.d[0]),expect(t.d).to.deep.equal(o.d),e()}),it("merges array over an object",function(e){var t={x:["n","m"]},o={x:{n:"1",m:"2"}};Hoek.merge(o,t),expect(t.x[0]).to.equal("n"),expect(t.x.n).to.not.exist(),e()}),it("merges object over an array",function(e){var t={x:["n","m"]},o={x:{n:"1",m:"2"}};Hoek.merge(t,o),expect(t.x.n).to.equal("1"),expect(t.x[0]).to.not.exist(),e()}),it("does not throw if source is null",function(e){var t={},o=null,n=null;expect(function(){n=Hoek.merge(t,o)}).to.not.throw(),expect(n).to.equal(t),e()}),it("does not throw if source is undefined",function(e){var t,o={},n=null;expect(function(){n=Hoek.merge(o,t)}).to.not.throw(),expect(n).to.equal(o),e()}),it("throws if source is not an object",function(e){expect(function(){var e={},t=0;Hoek.merge(e,t)}).to.throw("Invalid source value: must be null, undefined, or an object"),e()}),it("throws if target is not an object",function(e){expect(function(){var e=0,t={};Hoek.merge(e,t)}).to.throw("Invalid target value: must be an object"),e()}),it("throws if target is not an array and source is",function(e){expect(function(){var e={},t=[1,2];Hoek.merge(e,t)}).to.throw("Cannot merge array onto an object"),e()}),it("returns the same object when merging arrays",function(e){var t=[],o=[1,2];expect(Hoek.merge(t,o)).to.equal(t),e()}),it("combines an empty object with a non-empty object",function(e){var t={},o=nestedObj,n=Hoek.merge(t,o);expect(t).to.deep.equal(o),expect(n).to.deep.equal(o),e()}),it("overrides values in target",function(e){var t={x:1,y:2,z:3,v:5,t:"test",m:"abc"},o={x:null,z:4,v:0,t:{u:6},m:"123"},n=Hoek.merge(t,o);expect(n.x).to.equal(null),expect(n.y).to.equal(2),expect(n.z).to.equal(4),expect(n.v).to.equal(0),expect(n.m).to.equal("123"),expect(n.t).to.deep.equal({u:6}),e()}),it("overrides values in target (flip)",function(e){var t={x:1,y:2,z:3,v:5,t:"test",m:"abc"},o={x:null,z:4,v:0,t:{u:6},m:"123"},n=Hoek.merge(o,t);expect(n.x).to.equal(1),expect(n.y).to.equal(2),expect(n.z).to.equal(3),expect(n.v).to.equal(5),expect(n.m).to.equal("abc"),expect(n.t).to.deep.equal("test"),e()}),it("retains Date properties",function(e){var t={x:new Date(1378776452757)},o=Hoek.merge({},t);expect(t.x.getTime()).to.equal(o.x.getTime()),e()}),it("retains Date properties when merging keys",function(e){var t={x:new Date(1378776452757)},o=Hoek.merge({x:{}},t);expect(t.x.getTime()).to.equal(o.x.getTime()),e()}),it("overrides Buffer",function(e){{var t={x:new Buffer("abc")};Hoek.merge({x:{}},t)}expect(t.x.toString()).to.equal("abc"),e()})}),describe("applyToDefaults()",function(){var e={a:1,b:2,c:{d:3,e:[5,6]},f:6,g:"test"};it("throws when target is null",function(e){expect(function(){Hoek.applyToDefaults(null,{})}).to.throw("Invalid defaults value: must be an object"),e()}),it("returns null if options is false",function(t){var o=Hoek.applyToDefaults(e,!1);expect(o).to.equal(null),t()}),it("returns null if options is null",function(t){var o=Hoek.applyToDefaults(e,null);expect(o).to.equal(null),t()}),it("returns null if options is undefined",function(t){var o=Hoek.applyToDefaults(e,void 0);expect(o).to.equal(null),t()}),it("returns a copy of defaults if options is true",function(t){var o=Hoek.applyToDefaults(e,!0);expect(o).to.deep.equal(e),t()}),it("applies object to defaults",function(t){var o={a:null,c:{e:[4]},f:0,g:{h:5}},n=Hoek.applyToDefaults(e,o);expect(n.c.e).to.deep.equal([4]),expect(n.a).to.equal(1),expect(n.b).to.equal(2),expect(n.f).to.equal(0),expect(n.g).to.deep.equal({h:5}),t()}),it("applies object to defaults with null",function(t){var o={a:null,c:{e:[4]},f:0,g:{h:5}},n=Hoek.applyToDefaults(e,o,!0);expect(n.c.e).to.deep.equal([4]),expect(n.a).to.equal(null),expect(n.b).to.equal(2),expect(n.f).to.equal(0),expect(n.g).to.deep.equal({h:5}),t()})}),describe("cloneWithShallow()",function(){it("deep clones except for listed keys",function(e){var t={a:{b:5},c:{d:6}},o=Hoek.cloneWithShallow(t,["c"]);expect(o).to.deep.equal(t),expect(o).to.not.equal(t),expect(o.a).to.not.equal(t.a),expect(o.b).to.equal(t.b),e()}),it("returns immutable value",function(e){expect(Hoek.cloneWithShallow(5)).to.equal(5),e()}),it("returns null value",function(e){expect(Hoek.cloneWithShallow(null)).to.equal(null),e()}),it("returns undefined value",function(e){expect(Hoek.cloneWithShallow(void 0)).to.equal(void 0),e()}),it("deep clones except for listed keys (including missing keys)",function(e){var t={a:{b:5},c:{d:6}},o=Hoek.cloneWithShallow(t,["c","v"]);expect(o).to.deep.equal(t),expect(o).to.not.equal(t),expect(o.a).to.not.equal(t.a),expect(o.b).to.equal(t.b),e()})}),describe("applyToDefaultsWithShallow()",function(){it("shallow copies the listed keys from options without merging",function(e){var t={a:{b:5,e:3},c:{d:7,g:1}},o={a:{b:4},c:{d:6,f:7}},n=Hoek.applyToDefaultsWithShallow(t,o,["a"]);expect(n).to.deep.equal({a:{b:4},c:{d:6,g:1,f:7}}),expect(n.a).to.equal(o.a),expect(n.a).to.not.equal(t.a),expect(n.c).to.not.equal(o.c),expect(n.c).to.not.equal(t.c),e()}),it("shallow copies the nested keys (override)",function(e){var t={a:{b:5},c:{d:7,g:1}},o={a:{b:4},c:{d:6,g:{h:8}}},n=Hoek.applyToDefaultsWithShallow(t,o,["c.g"]);expect(n).to.deep.equal({a:{b:4},c:{d:6,g:{h:8}}}),expect(n.c.g).to.equal(o.c.g),e()}),it("shallow copies the nested keys (missing)",function(e){var t={a:{b:5}},o={a:{b:4},c:{g:{h:8}}},n=Hoek.applyToDefaultsWithShallow(t,o,["c.g"]);expect(n).to.deep.equal({a:{b:4},c:{g:{h:8}}}),expect(n.c.g).to.equal(o.c.g),e()}),it("shallow copies the nested keys (override)",function(e){var t={a:{b:5},c:{g:{d:7}}},o={a:{b:4},c:{g:{h:8}}},n=Hoek.applyToDefaultsWithShallow(t,o,["c.g"]);expect(n).to.deep.equal({a:{b:4},c:{g:{h:8}}}),expect(n.c.g).to.equal(o.c.g),e()}),it("shallow copies the nested keys (deeper)",function(e){var t={a:{b:5}},o={a:{b:4},c:{g:{r:{h:8}}}},n=Hoek.applyToDefaultsWithShallow(t,o,["c.g.r"]);expect(n).to.deep.equal({a:{b:4},c:{g:{r:{h:8}}}}),expect(n.c.g.r).to.equal(o.c.g.r),e()}),it("shallow copies the nested keys (not present)",function(e){var t={a:{b:5}},o={a:{b:4},c:{g:{r:{h:8}}}},n=Hoek.applyToDefaultsWithShallow(t,o,["x.y"]);expect(n).to.deep.equal({a:{b:4},c:{g:{r:{h:8}}}}),e()}),it("shallow copies the listed keys in the defaults",function(e){var t={a:{b:1}},o=Hoek.applyToDefaultsWithShallow(t,{},["a"]);expect(o.a).to.equal(t.a),e()}),it("shallow copies the listed keys in the defaults (true)",function(e){var t={a:{b:1}},o=Hoek.applyToDefaultsWithShallow(t,!0,["a"]);expect(o.a).to.equal(t.a),e()}),it("returns null on false",function(e){var t={a:{b:1}},o=Hoek.applyToDefaultsWithShallow(t,!1,["a"]);expect(o).to.equal(null),e()}),it("throws on missing defaults",function(e){expect(function(){Hoek.applyToDefaultsWithShallow(null,{},["a"])}).to.throw("Invalid defaults value: must be an object"),e()}),it("throws on invalid defaults",function(e){expect(function(){Hoek.applyToDefaultsWithShallow("abc",{},["a"])}).to.throw("Invalid defaults value: must be an object"),e()}),it("throws on invalid options",function(e){expect(function(){Hoek.applyToDefaultsWithShallow({},"abc",["a"])}).to.throw("Invalid options value: must be true, falsy or an object"),e()}),it("throws on missing keys",function(e){expect(function(){Hoek.applyToDefaultsWithShallow({},!0)}).to.throw("Invalid keys"),e()}),it("throws on invalid keys",function(e){expect(function(){Hoek.applyToDefaultsWithShallow({},!0,"a")}).to.throw("Invalid keys"),e()})}),describe("deepEqual()",function(){it("compares simple values",function(e){expect(Hoek.deepEqual("x","x")).to.be.true(),expect(Hoek.deepEqual("x","y")).to.be.false(),expect(Hoek.deepEqual("x1","x")).to.be.false(),expect(Hoek.deepEqual(-0,0)).to.be.false(),expect(Hoek.deepEqual(-0,-0)).to.be.true(),expect(Hoek.deepEqual(0,0)).to.be.true(),expect(Hoek.deepEqual(0,-0)).to.be.false(),expect(Hoek.deepEqual(1,1)).to.be.true(),expect(Hoek.deepEqual(0,0)).to.be.true(),expect(Hoek.deepEqual(-1,1)).to.be.false(),expect(Hoek.deepEqual(0/0,0)).to.be.false(),expect(Hoek.deepEqual(0/0,0/0)).to.be.true(),e()}),it("compares different types",function(e){expect(Hoek.deepEqual([],5)).to.be.false(),expect(Hoek.deepEqual(5,[])).to.be.false(),expect(Hoek.deepEqual({},null)).to.be.false(),expect(Hoek.deepEqual(null,{})).to.be.false(),expect(Hoek.deepEqual("abc",{})).to.be.false(),expect(Hoek.deepEqual({},"abc")).to.be.false(),e()}),it("compares empty structures",function(e){expect(Hoek.deepEqual([],[])).to.be.true(),expect(Hoek.deepEqual({},{})).to.be.true(),expect(Hoek.deepEqual([],{})).to.be.false(),e()}),it("compares empty arguments object",function(e){var t=function(){expect(Hoek.deepEqual([],arguments)).to.be.false()};t(),e()}),it("compares empty arguments objects",function(e){var t=function(){var e=arguments,t=function(){expect(Hoek.deepEqual(e,arguments)).to.be.false()};t()};t(),e()}),it("compares dates",function(e){expect(Hoek.deepEqual(new Date(2015,1,1),new Date(2015,1,1))).to.be.true(),expect(Hoek.deepEqual(new Date(100),new Date(101))).to.be.false(),expect(Hoek.deepEqual(new Date,{})).to.be.false(),e()}),it("compares regular expressions",function(e){expect(Hoek.deepEqual(/\s/,new RegExp("\\s"))).to.be.true(),expect(Hoek.deepEqual(/\s/g,/\s/g)).to.be.true(),expect(Hoek.deepEqual(/a/,{})).to.be.false(),expect(Hoek.deepEqual(/\s/g,/\s/i)).to.be.false(),expect(Hoek.deepEqual(/a/g,/b/g)).to.be.false(),e()}),it("compares arrays",function(e){expect(Hoek.deepEqual([[1]],[[1]])).to.be.true(),expect(Hoek.deepEqual([1,2,3],[1,2,3])).to.be.true(),expect(Hoek.deepEqual([1,2,3],[1,3,2])).to.be.false(),expect(Hoek.deepEqual([1,2,3],[1,2])).to.be.false(),expect(Hoek.deepEqual([1],[1])).to.be.true(),e()}),it("compares buffers",function(e){expect(Hoek.deepEqual(new Buffer([1,2,3]),new Buffer([1,2,3]))).to.be.true(),expect(Hoek.deepEqual(new Buffer([1,2,3]),new Buffer([1,3,2]))).to.be.false(),expect(Hoek.deepEqual(new Buffer([1,2,3]),new Buffer([1,2]))).to.be.false(),expect(Hoek.deepEqual(new Buffer([1,2,3]),{})).to.be.false(),expect(Hoek.deepEqual(new Buffer([1,2,3]),[1,2,3])).to.be.false(),e()}),it("compares objects",function(e){expect(Hoek.deepEqual({a:1,b:2,c:3},{a:1,b:2,c:3})).to.be.true(),expect(Hoek.deepEqual({foo:"bar"},{foo:"baz"})).to.be.false(),expect(Hoek.deepEqual({foo:{bar:"foo"}},{foo:{bar:"baz"}})).to.be.false(),e()}),it("handles circular dependency",function(e){var t={};t.x=t;var o=Hoek.clone(t);expect(Hoek.deepEqual(t,o)).to.be.true(),e()}),it("compares an object with property getter without executing it",function(e){var t={},o=1,n=0;Object.defineProperty(t,"test",{enumerable:!0,configurable:!0,get:function(){return++n,o}});var a=Hoek.clone(t);expect(Hoek.deepEqual(t,a)).to.be.true(),expect(n).to.equal(0),expect(a.test).to.equal(1),expect(n).to.equal(1),e()}),it("compares objects with property getters",function(e){var t={};Object.defineProperty(t,"test",{enumerable:!0,configurable:!0,get:function(){return 1}});var o={};Object.defineProperty(o,"test",{enumerable:!0,configurable:!0,get:function(){return 2}}),expect(Hoek.deepEqual(t,o)).to.be.false(),e()}),it("compares object prototypes",function(e){var t=function(){this.a=5};t.prototype.b=function(){return this.a};var o=function(){this.a=5};o.prototype.b=function(){return this.a},expect(Hoek.deepEqual(new t,new o)).to.be.false(),expect(Hoek.deepEqual(new t,new t)).to.be.true(),expect(Hoek.deepEqual(new o,new o)).to.be.true(),e()}),it("compares plain objects",function(e){var t=Object.create(null),o=Object.create(null);t.b="c",o.b="c",expect(Hoek.deepEqual(t,o)).to.be.true(),expect(Hoek.deepEqual(t,{b:"c"})).to.be.false(),e()}),it("compares an object with an empty object",function(e){var t={a:1,b:2};expect(Hoek.deepEqual({},t)).to.be.false(),expect(Hoek.deepEqual(t,{})).to.be.false(),e()}),it("compares an object ignoring the prototype",function(e){var t=Object.create(null),o={};expect(Hoek.deepEqual(t,o,{prototype:!1})).to.be.true(),e()}),it("compares an object ignoring the prototype recursively",function(e){var t=[Object.create(null)],o=[{}];expect(Hoek.deepEqual(t,o,{prototype:!1})).to.be.true(),e()})}),describe("unique()",function(){it("ensures uniqueness within array of objects based on subkey",function(e){var t=Hoek.unique(dupsArray,"x");expect(t).to.deep.equal(reducedDupsArray),e()}),it("removes duplicated without key",function(e){expect(Hoek.unique([1,2,3,4,2,1,5])).to.deep.equal([1,2,3,4,5]),e()})}),describe("mapToObject()",function(){it("returns null on null array",function(e){var t=Hoek.mapToObject(null);expect(t).to.equal(null),e()}),it("converts basic array to existential object",function(e){var t=[1,2,3,4],o=Hoek.mapToObject(t);for(var n in t)expect(o[t[n]]).to.equal(!0);e()}),it("converts array of objects to existential object",function(e){var t=[{x:1},{x:2},{x:3},{y:4}],o="x",n=Hoek.mapToObject(t,o);expect(n).to.deep.equal({1:!0,2:!0,3:!0}),e()})}),describe("intersect()",function(){it("returns the common objects of two arrays",function(e){var t=[1,2,3,4,4,5,5],o=[5,4,5,6,7],n=Hoek.intersect(t,o);expect(n.length).to.equal(2),e()}),it("returns just the first common object of two arrays",function(e){var t=[1,2,3,4,4,5,5],o=[5,4,5,6,7],n=Hoek.intersect(t,o,!0);expect(n).to.equal(5),e()}),it("returns null when no common and returning just the first common object of two arrays",function(e){var t=[1,2,3,4,4,5,5],o=[6,7],n=Hoek.intersect(t,o,!0);expect(n).to.equal(null),e()}),it("returns an empty array if either input is null",function(e){expect(Hoek.intersect([1],null).length).to.equal(0),expect(Hoek.intersect(null,[1]).length).to.equal(0),e()}),it("returns the common objects of object and array",function(e){var t=[1,2,3,4,4,5,5],o=[5,4,5,6,7],n=Hoek.intersect(Hoek.mapToObject(t),o);expect(n.length).to.equal(2),e()})}),describe("contain()",function(){it("tests strings",function(e){expect(Hoek.contain("abc","ab")).to.be.true(),expect(Hoek.contain("abc","abc",{only:!0})).to.be.true(),expect(Hoek.contain("aaa","a",{only:!0})).to.be.true(),expect(Hoek.contain("abc","b",{once:!0})).to.be.true(),expect(Hoek.contain("abc",["a","c"])).to.be.true(),expect(Hoek.contain("abc",["a","d"],{part:!0})).to.be.true(),expect(Hoek.contain("abc","ac")).to.be.false(),expect(Hoek.contain("abcd","abc",{only:!0})).to.be.false(),expect(Hoek.contain("aab","a",{only:!0})).to.be.false(),expect(Hoek.contain("abb","b",{once:!0})).to.be.false(),expect(Hoek.contain("abc",["a","d"])).to.be.false(),expect(Hoek.contain("abc",["ab","bc"])).to.be.false(),e()}),it("tests arrays",function(e){expect(Hoek.contain([1,2,3],1)).to.be.true(),expect(Hoek.contain([{a:1}],{a:1},{deep:!0})).to.be.true(),expect(Hoek.contain([1,2,3],[1,2])).to.be.true(),expect(Hoek.contain([{a:1}],[{a:1}],{deep:!0})).to.be.true(),expect(Hoek.contain([1,1,2],[1,2],{only:!0})).to.be.true(),expect(Hoek.contain([1,2],[1,2],{once:!0})).to.be.true(),expect(Hoek.contain([1,2,3],[1,4],{part:!0})).to.be.true(),expect(Hoek.contain([[1],[2]],[[1]],{deep:!0})).to.be.true(),expect(Hoek.contain([1,2,3],4)).to.be.false(),expect(Hoek.contain([{a:1}],{a:2},{deep:!0})).to.be.false(),expect(Hoek.contain([{a:1}],{a:1})).to.be.false(),expect(Hoek.contain([1,2,3],[4,5])).to.be.false(),expect(Hoek.contain([[3],[2]],[[1]])).to.be.false(),expect(Hoek.contain([[1],[2]],[[1]])).to.be.false(),expect(Hoek.contain([{a:1}],[{a:2}],{deep:!0})).to.be.false(),expect(Hoek.contain([1,3,2],[1,2],{only:!0})).to.be.false(),expect(Hoek.contain([1,2,2],[1,2],{once:!0})).to.be.false(),expect(Hoek.contain([0,2,3],[1,4],{part:!0})).to.be.false(),e()}),it("tests objects",function(e){expect(Hoek.contain({a:1,b:2,c:3},"a")).to.be.true(),expect(Hoek.contain({a:1,b:2,c:3},["a","c"])).to.be.true(),expect(Hoek.contain({a:1,b:2,c:3},["a","b","c"],{only:!0})).to.be.true(),expect(Hoek.contain({a:1,b:2,c:3},{a:1})).to.be.true(),expect(Hoek.contain({a:1,b:2,c:3},{a:1,c:3})).to.be.true(),expect(Hoek.contain({a:1,b:2,c:3},{a:1,d:4},{part:!0})).to.be.true(),expect(Hoek.contain({a:1,b:2,c:3},{a:1,b:2,c:3},{only:!0})).to.be.true(),expect(Hoek.contain({a:[1],b:[2],c:[3]},{a:[1],c:[3]},{deep:!0})).to.be.true(),expect(Hoek.contain({a:[{b:1},{c:2},{d:3,e:4}]},{a:[{b:1},{d:3}]},{deep:!0})).to.be.true(),expect(Hoek.contain({a:[{b:1},{c:2},{d:3,e:4}]},{a:[{b:1},{d:3}]},{deep:!0,part:!0})).to.be.true(),expect(Hoek.contain({a:[{b:1},{c:2},{d:3,e:4}]},{a:[{b:1},{d:3}]},{deep:!0,part:!1})).to.be.false(),expect(Hoek.contain({a:[{b:1},{c:2},{d:3,e:4}]},{a:[{b:1},{d:3}]},{deep:!0,only:!0})).to.be.false(),expect(Hoek.contain({a:[{b:1},{c:2},{d:3,e:4}]},{a:[{b:1},{d:3}]},{deep:!0,only:!1})).to.be.true(),expect(Hoek.contain({a:1,b:2,c:3},"d")).to.be.false(),expect(Hoek.contain({a:1,b:2,c:3},["a","d"])).to.be.false(),expect(Hoek.contain({a:1,b:2,c:3,d:4},["a","b","c"],{only:!0})).to.be.false(),expect(Hoek.contain({a:1,b:2,c:3},{a:2})).to.be.false(),expect(Hoek.contain({a:1,b:2,c:3},{a:2,b:2},{part:!0})).to.be.false(),expect(Hoek.contain({a:1,b:2,c:3},{a:1,d:3})).to.be.false(),expect(Hoek.contain({a:1,b:2,c:3},{a:1,d:4})).to.be.false(),expect(Hoek.contain({a:1,b:2,c:3},{a:1,b:2},{only:!0})).to.be.false(),expect(Hoek.contain({a:[1],b:[2],c:[3]},{a:[1],c:[3]})).to.be.false(),expect(Hoek.contain({a:{b:{c:1,d:2}}},{a:{b:{c:1}}})).to.be.false(),expect(Hoek.contain({a:{b:{c:1,d:2}}},{a:{b:{c:1}}},{deep:!0})).to.be.true(),expect(Hoek.contain({a:{b:{c:1,d:2}}},{a:{b:{c:1}}},{deep:!0,only:!0})).to.be.false(),expect(Hoek.contain({a:{b:{c:1,d:2}}},{a:{b:{c:1}}},{deep:!0,only:!1})).to.be.true(),expect(Hoek.contain({a:{b:{c:1,d:2}}},{a:{b:{c:1}}},{deep:!0,part:!0})).to.be.true(),expect(Hoek.contain({a:{b:{c:1,d:2}}},{a:{b:{c:1}}},{deep:!0,part:!1})).to.be.false();var t=function(e){this.bar=e};Object.defineProperty(t.prototype,"baz",{enumerable:!0,get:function(){return this.bar}}),expect(Hoek.contain({a:new t("b")},{a:new t("b")},{deep:!0})).to.be.true(),expect(Hoek.contain({a:new t("b")},{a:new t("b")},{deep:!0,part:!0})).to.be.true(),expect(Hoek.contain({a:new t("b")},{a:{baz:"b"}},{deep:!0})).to.be.true(),expect(Hoek.contain({a:new t("b")},{a:{baz:"b"}},{deep:!0,only:!0})).to.be.false(),expect(Hoek.contain({a:new t("b")},{a:{baz:"b"}},{deep:!0,part:!1})).to.be.false(),expect(Hoek.contain({a:new t("b")},{a:{baz:"b"}},{deep:!0,part:!0})).to.be.true(),e()})}),describe("flatten()",function(){it("returns a flat array",function(e){var t=Hoek.flatten([1,2,[3,4,[5,6],[7],8],[9],[10,[11,12]],13]);expect(t.length).to.equal(13),expect(t).to.deep.equal([1,2,3,4,5,6,7,8,9,10,11,12,13]),e()})}),describe("reach()",function(){var e={a:{b:{c:{d:1,e:2},f:"hello"},g:{h:3}},i:function(){},j:null,k:[4,8,9,1]};e.i.x=5,it("returns object itself",function(t){expect(Hoek.reach(e,null)).to.equal(e),expect(Hoek.reach(e,!1)).to.equal(e),expect(Hoek.reach(e)).to.equal(e),t()}),it("returns first value of array",function(t){expect(Hoek.reach(e,"k.0")).to.equal(4),t()}),it("returns last value of array using negative index",function(t){expect(Hoek.reach(e,"k.-2")).to.equal(9),t()}),it("returns a valid member",function(t){expect(Hoek.reach(e,"a.b.c.d")).to.equal(1),t()}),it("returns a valid member with separator override",function(t){expect(Hoek.reach(e,"a/b/c/d","/")).to.equal(1),t()}),it("returns undefined on null object",function(e){expect(Hoek.reach(null,"a.b.c.d")).to.equal(void 0),e()}),it("returns undefined on missing object member",function(t){expect(Hoek.reach(e,"a.b.c.d.x")).to.equal(void 0),t()}),it("returns undefined on missing function member",function(t){expect(Hoek.reach(e,"i.y",{functions:!0})).to.equal(void 0),t()}),it("throws on missing member in strict mode",function(t){expect(function(){Hoek.reach(e,"a.b.c.o.x",{strict:!0})}).to.throw("Missing segment o in reach path  a.b.c.o.x"),t()}),it("returns undefined on invalid member",function(t){expect(Hoek.reach(e,"a.b.c.d-.x")).to.equal(void 0),t()}),it("returns function member",function(t){expect(typeof Hoek.reach(e,"i")).to.equal("function"),t()}),it("returns function property",function(t){expect(Hoek.reach(e,"i.x")).to.equal(5),t()}),it("returns null",function(t){expect(Hoek.reach(e,"j")).to.equal(null),t()}),it("throws on function property when functions not allowed",function(t){expect(function(){Hoek.reach(e,"i.x",{functions:!1})}).to.throw("Invalid segment x in reach path  i.x"),t()}),it("will return a default value if property is not found",function(t){expect(Hoek.reach(e,"a.b.q",{"default":"defaultValue"})).to.equal("defaultValue"),t()}),it("will return a default value if path is not found",function(t){expect(Hoek.reach(e,"q",{"default":"defaultValue"})).to.equal("defaultValue"),t()}),it("allows a falsey value to be used as the default value",function(t){expect(Hoek.reach(e,"q",{"default":""})).to.equal(""),t()})}),describe("reachTemplate()",function(){it("applies object to template",function(e){var t={a:{b:{c:{d:1}}},j:null,k:[4,8,9,1]},o="{k.0}:{k.-2}:{a.b.c.d}:{x.y}:{j}";expect(Hoek.reachTemplate(t,o)).to.equal("4:9:1::"),e()}),it("applies object to template (options)",function(e){var t={a:{b:{c:{d:1}}},j:null,k:[4,8,9,1]},o="{k/0}:{k/-2}:{a/b/c/d}:{x/y}:{j}";expect(Hoek.reachTemplate(t,o,"/")).to.equal("4:9:1::"),e()})}),describe("callStack()",function(){it("returns the full call stack",function(e){var t=Hoek.callStack();expect(t[0][0]).to.contain("index.js"),expect(t[0][2]).to.equal(26),e()})}),describe("displayStack ()",function(){it("returns the full call stack for display",function(e){var t=Hoek.displayStack();expect(t[0]).to.contain(Path.normalize("/test/index.js")+":"),e()}),it("includes constructor functions correctly",function(e){{var t=function(e){e()};new t(function(){var t=Hoek.displayStack();expect(t[1]).to.contain("new Something"),e()})}})}),describe("abort()",function(){it("exits process when not in test mode",function(e){var t=process.env.NODE_ENV,o=process.stdout.write,n=process.exit;process.env.NODE_ENV="nottatest",process.stdout.write=function(){},process.exit=function(a){process.exit=n,process.env.NODE_ENV=t,process.stdout.write=o,expect(a).to.equal(1),e()},Hoek.abort("Boom")}),it("throws when not in test mode and abortThrow is true",function(e){var t=process.env.NODE_ENV;process.env.NODE_ENV="nottatest",Hoek.abortThrow=!0;var o=function(){Hoek.abort("my error message")};expect(o).to.throw("my error message"),Hoek.abortThrow=!1,process.env.NODE_ENV=t,e()}),it("respects hideStack argument",function(e){var t=process.env.NODE_ENV,o=process.stdout.write,n=process.exit,a="";process.exit=function(){},process.env.NODE_ENV="",process.stdout.write=function(e){a=e},Hoek.abort("my error message",!0),process.env.NODE_ENV=t,process.stdout.write=o,process.exit=n,expect(a).to.equal("ABORT: my error message\n	\n"),e()}),it("throws in test mode",function(e){var t=process.env.NODE_ENV;process.env.NODE_ENV="test",expect(function(){Hoek.abort("my error message",!0)}).to.throw("my error message"),process.env.NODE_ENV=t,e()}),it("throws in test mode with default message",function(e){var t=process.env.NODE_ENV;process.env.NODE_ENV="test",expect(function(){Hoek.abort("",!0)}).to.throw("Unknown error"),process.env.NODE_ENV=t,e()}),it("defaults to showing stack",function(e){var t=process.env.NODE_ENV,o=process.stdout.write,n=process.exit,a="";process.exit=function(){},process.env.NODE_ENV="",process.stdout.write=function(e){a=e},Hoek.abort("my error message"),process.env.NODE_ENV=t,process.stdout.write=o,process.exit=n,expect(a).to.contain("index.js"),e()})}),describe("assert()",function(){it("throws an Error when using assert in a test",function(e){var t=function(){Hoek.assert(!1,"my error message")};expect(t).to.throw("my error message"),e()}),it("throws an Error when using assert in a test with no message",function(e){var t=function(){Hoek.assert(!1)};expect(t).to.throw("Unknown error"),e()}),it("throws an Error when using assert in a test with multipart message",function(e){var t=function(){Hoek.assert(!1,"This","is","my message")};expect(t).to.throw("This is my message"),e()}),it("throws an Error when using assert in a test with multipart message (empty)",function(e){var t=function(){Hoek.assert(!1,"This","is","","my message")};expect(t).to.throw("This is my message"),e()}),it("throws an Error when using assert in a test with object message",function(e){var t=function(){Hoek.assert(!1,"This","is",{spinal:"tap"})};expect(t).to.throw('This is {"spinal":"tap"}'),e()}),it("throws an Error when using assert in a test with multipart string and error messages",function(e){var t=function(){Hoek.assert(!1,"This","is",new Error("spinal"),new Error("tap"))};expect(t).to.throw("This is spinal tap"),e()}),it("throws an Error when using assert in a test with error object message",function(e){var t=function(){Hoek.assert(!1,new Error("This is spinal tap"))};expect(t).to.throw("This is spinal tap"),e()}),it("throws the same Error that is passed to it if there is only one error passed",function(e){var t=new Error("ruh roh"),o=new Error("ruh roh"),n=function(){Hoek.assert(!1,t)};try{n()}catch(a){expect(t).to.equal(t),expect(t).to.not.equal(o)}e()})}),describe("Timer",function(){it("returns time elapsed",function(e){var t=new Hoek.Timer;setTimeout(function(){expect(t.elapsed()).to.be.above(9),e()},12)})}),describe("Bench",function(){it("returns time elapsed",function(e){var t=new Hoek.Bench;setTimeout(function(){expect(t.elapsed()).to.be.above(9),e()},12)})}),describe("escapeRegex()",function(){it("escapes all special regular expression characters",function(e){var t=Hoek.escapeRegex('4^f$s.4*5+-_?%=#!:@|~\\/`"(>)[<]d{}s,');expect(t).to.equal('4\\^f\\$s\\.4\\*5\\+\\-_\\?%\\=#\\!\\:@\\|~\\\\\\/`"\\(>\\)\\[<\\]d\\{\\}s\\,'),e()})}),describe("Base64Url",function(){var e="AAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIjJCUmJygpKissLS4vMDEyMzQ1Njc4OTo7PD0-P0BBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWltcXV5fYGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6e3x9fn-AgYKDhIWGh4iJiouMjY6PkJGSk5SVlpeYmZqbnJ2en6ChoqOkpaanqKmqq6ytrq-wsbKztLW2t7i5uru8vb6_wMHCw8TFxsfIycrLzM3Oz9DR0tPU1dbX2Nna29zd3t_g4eLj5OXm5-jp6uvs7e7v8PHy8_T19vf4-fr7_P3-_w",t=unescape("%00%01%02%03%04%05%06%07%08%09%0A%0B%0C%0D%0E%0F%10%11%12%13%14%15%16%17%18%19%1A%1B%1C%1D%1E%1F%20%21%22%23%24%25%26%27%28%29*+%2C-./0123456789%3A%3B%3C%3D%3E%3F@ABCDEFGHIJKLMNOPQRSTUVWXYZ%5B%5C%5D%5E_%60abcdefghijklmnopqrstuvwxyz%7B%7C%7D%7E%7F%80%81%82%83%84%85%86%87%88%89%8A%8B%8C%8D%8E%8F%90%91%92%93%94%95%96%97%98%99%9A%9B%9C%9D%9E%9F%A0%A1%A2%A3%A4%A5%A6%A7%A8%A9%AA%AB%AC%AD%AE%AF%B0%B1%B2%B3%B4%B5%B6%B7%B8%B9%BA%BB%BC%BD%BE%BF%C0%C1%C2%C3%C4%C5%C6%C7%C8%C9%CA%CB%CC%CD%CE%CF%D0%D1%D2%D3%D4%D5%D6%D7%D8%D9%DA%DB%DC%DD%DE%DF%E0%E1%E2%E3%E4%E5%E6%E7%E8%E9%EA%EB%EC%ED%EE%EF%F0%F1%F2%F3%F4%F5%F6%F7%F8%F9%FA%FB%FC%FD%FE%FF");describe("base64urlEncode()",function(){it("should base64 URL-safe a string",function(o){expect(Hoek.base64urlEncode(t)).to.equal(e),o()
}),it("encodes a buffer",function(o){expect(Hoek.base64urlEncode(new Buffer(t,"binary"))).to.equal(e),o()}),it("should base64 URL-safe a hex string",function(o){var n=new Buffer(t,"binary");expect(Hoek.base64urlEncode(n.toString("hex"),"hex")).to.equal(e),o()}),it("works on larger input strings",function(e){var t=Fs.readFileSync(Path.join(__dirname,"index.js")).toString(),o=Hoek.base64urlEncode(t);expect(o).to.not.contain("+"),expect(o).to.not.contain("/");var n=Hoek.base64urlDecode(o);expect(n).to.equal(t),e()})}),describe("base64urlDecode()",function(){it("should un-base64 URL-safe a string",function(o){expect(Hoek.base64urlDecode(e)).to.equal(t),o()}),it("should un-base64 URL-safe a string into hex",function(o){expect(Hoek.base64urlDecode(e,"hex")).to.equal(new Buffer(t,"binary").toString("hex")),o()}),it("should un-base64 URL-safe a string and return a buffer",function(o){var n=Hoek.base64urlDecode(e,"buffer");expect(n instanceof Buffer).to.equal(!0),expect(n.toString("binary")).to.equal(t),o()}),it("returns error on undefined input",function(e){expect(Hoek.base64urlDecode().message).to.exist(),e()}),it("returns error on invalid input",function(e){expect(Hoek.base64urlDecode("*").message).to.exist(),e()})})}),describe("escapeHeaderAttribute()",function(){it("should not alter ascii values",function(e){var t=Hoek.escapeHeaderAttribute("My Value");expect(t).to.equal("My Value"),e()}),it("escapes all special HTTP header attribute characters",function(e){var t=Hoek.escapeHeaderAttribute('I said go!!!#"'+String.fromCharCode(92));expect(t).to.equal('I said go!!!#\\"\\\\'),e()}),it("throws on large unicode characters",function(e){var t=function(){Hoek.escapeHeaderAttribute("this is a test"+String.fromCharCode(500)+String.fromCharCode(300))};expect(t).to.throw(Error),e()}),it("throws on CRLF to prevent response splitting",function(e){var t=function(){Hoek.escapeHeaderAttribute("this is a test\r\n")};expect(t).to.throw(Error),e()})}),describe("escapeHtml()",function(){it("escapes all special HTML characters",function(e){var t=Hoek.escapeHtml("&<>\"'`");expect(t).to.equal("&amp;&lt;&gt;&quot;&#x27;&#x60;"),e()}),it("returns empty string on falsy input",function(e){var t=Hoek.escapeHtml("");expect(t).to.equal(""),e()}),it("returns unchanged string on no reserved input",function(e){var t=Hoek.escapeHtml("abc");expect(t).to.equal("abc"),e()})}),describe("nextTick()",function(){it("calls the provided callback on nextTick",function(e){var t=0,o=function(e,o){t+=e,o()},n=Hoek.nextTick(o);n(5,function(){expect(t).to.equal(6),e()}),expect(t).to.equal(0),o(1,function(){expect(t).to.equal(1)})})}),describe("once()",function(){it("allows function to only execute once",function(e){var t=0,o=function(e){t+=e};o(5),expect(t).to.equal(5),o=Hoek.once(o),o(5),expect(t).to.equal(10),o(5),expect(t).to.equal(10),e()}),it("double once wraps one time",function(e){var t=function(){};t=Hoek.once(t),t.x=1,t=Hoek.once(t),expect(t.x).to.equal(1),e()})}),describe("isAbsoltePath()",function(){it("identifies if path is absolute on Unix without node support",{parallel:!1},function(e){var t=Path.isAbsolute;Path.isAbsolute=void 0,expect(Hoek.isAbsolutePath("")).to.equal(!1),expect(Hoek.isAbsolutePath("a")).to.equal(!1),expect(Hoek.isAbsolutePath("./a")).to.equal(!1),expect(Hoek.isAbsolutePath("/a")).to.equal(!0),expect(Hoek.isAbsolutePath("/")).to.equal(!0),Path.isAbsolute=t,e()}),it("identifies if path is absolute with fake node support",{parallel:!1},function(e){var t=Path.isAbsolute;Path.isAbsolute=function(e){return"/"===e[0]},expect(Hoek.isAbsolutePath("","linux")).to.equal(!1),expect(Hoek.isAbsolutePath("a","linux")).to.equal(!1),expect(Hoek.isAbsolutePath("./a","linux")).to.equal(!1),expect(Hoek.isAbsolutePath("/a","linux")).to.equal(!0),expect(Hoek.isAbsolutePath("/","linux")).to.equal(!0),Path.isAbsolute=t,e()}),it("identifies if path is absolute on Windows without node support",{parallel:!1},function(e){var t=Path.isAbsolute;Path.isAbsolute=void 0,expect(Hoek.isAbsolutePath("//server/file","win32")).to.equal(!0),expect(Hoek.isAbsolutePath("//server/file","win32")).to.equal(!0),expect(Hoek.isAbsolutePath("\\\\server\\file","win32")).to.equal(!0),expect(Hoek.isAbsolutePath("C:/Users/","win32")).to.equal(!0),expect(Hoek.isAbsolutePath("C:\\Users\\","win32")).to.equal(!0),expect(Hoek.isAbsolutePath("C:cwd/another","win32")).to.equal(!1),expect(Hoek.isAbsolutePath("C:cwd\\another","win32")).to.equal(!1),expect(Hoek.isAbsolutePath("directory/directory","win32")).to.equal(!1),expect(Hoek.isAbsolutePath("directory\\directory","win32")).to.equal(!1),Path.isAbsolute=t,e()})}),describe("isInteger()",function(){it("validates integers",function(e){expect(Hoek.isInteger(0)).to.equal(!0),expect(Hoek.isInteger(1)).to.equal(!0),expect(Hoek.isInteger(1394035612500)).to.equal(!0),expect(Hoek.isInteger("0")).to.equal(!1),expect(Hoek.isInteger(1)).to.equal(!0),expect(Hoek.isInteger(1.1)).to.equal(!1),e()})}),describe("ignore()",function(){it("exists",function(e){expect(Hoek.ignore).to.exist(),expect(typeof Hoek.ignore).to.equal("function"),e()})}),describe("inherits()",function(){it("exists",function(e){expect(Hoek.inherits).to.exist(),expect(typeof Hoek.inherits).to.equal("function"),e()})}),describe("format()",function(){it("exists",function(e){expect(Hoek.format).to.exist(),expect(typeof Hoek.format).to.equal("function"),e()}),it("is a reference to Util.format",function(e){expect(Hoek.format("hello %s","world")).to.equal("hello world"),e()})}),describe("transform()",function(){var e={address:{one:"123 main street",two:"PO Box 1234"},zip:{code:3321232,province:null},title:"Warehouse",state:"CA"},t=[{address:{one:"123 main street",two:"PO Box 1234"},zip:{code:3321232,province:null},title:"Warehouse",state:"CA"},{address:{one:"456 market street",two:"PO Box 5678"},zip:{code:9876,province:null},title:"Garage",state:"NY"}];it("transforms an object based on the input object",function(t){var o=Hoek.transform(e,{"person.address.lineOne":"address.one","person.address.lineTwo":"address.two",title:"title","person.address.region":"state","person.address.zip":"zip.code","person.address.location":"zip.province"});expect(o).to.deep.equal({person:{address:{lineOne:"123 main street",lineTwo:"PO Box 1234",region:"CA",zip:3321232,location:null}},title:"Warehouse"}),t()}),it("transforms an array of objects based on the input object",function(e){var o=Hoek.transform(t,{"person.address.lineOne":"address.one","person.address.lineTwo":"address.two",title:"title","person.address.region":"state","person.address.zip":"zip.code","person.address.location":"zip.province"});expect(o).to.deep.equal([{person:{address:{lineOne:"123 main street",lineTwo:"PO Box 1234",region:"CA",zip:3321232,location:null}},title:"Warehouse"},{person:{address:{lineOne:"456 market street",lineTwo:"PO Box 5678",region:"NY",zip:9876,location:null}},title:"Garage"}]),e()}),it("uses the reach options passed into it",function(t){var o={"person.address.lineOne":"address-one","person.address.lineTwo":"address-two",title:"title","person.address.region":"state","person.prefix":"person-title","person.zip":"zip-code"},n={separator:"-","default":"unknown"},a=Hoek.transform(e,o,n);expect(a).to.deep.equal({person:{address:{lineOne:"123 main street",lineTwo:"PO Box 1234",region:"CA"},prefix:"unknown",zip:3321232},title:"Warehouse"}),t()}),it("works to create shallow objects",function(t){var o=Hoek.transform(e,{lineOne:"address.one",lineTwo:"address.two",title:"title",region:"state",province:"zip.province"});expect(o).to.deep.equal({lineOne:"123 main street",lineTwo:"PO Box 1234",title:"Warehouse",region:"CA",province:null}),t()}),it("only allows strings in the map",function(t){expect(function(){Hoek.transform(e,{lineOne:{}})}).to.throw('All mappings must be "." delineated strings'),t()}),it("throws an error on invalid arguments",function(e){expect(function(){Hoek.transform(0/0,{})}).to.throw("Invalid source object: must be null, undefined, an object, or an array"),e()}),it("is safe to pass null",function(e){var t=Hoek.transform(null,{});expect(t).to.deep.equal({}),e()}),it("is safe to pass undefined",function(e){var t=Hoek.transform(void 0,{});expect(t).to.deep.equal({}),e()})}),describe("uniqueFilename()",function(){it("generates a random file path",function(e){var t=Hoek.uniqueFilename("./test/modules");expect(t).to.exist(),expect(t).to.be.a.string(),expect(t).to.contain("test/modules"),e()}),it("is random enough to use in fast loops",function(e){for(var t=[],o=0;10>o;++o)t[o]=Hoek.uniqueFilename("./test/modules");var n=t.filter(function(e,t,o){return o.indexOf(e)===t});expect(n.length).to.equal(10),expect(t.length).to.equal(10),e()}),it("combines the random elements with a supplied character",function(e){var t=Hoek.uniqueFilename("./test","txt");expect(t).to.contain("test/"),expect(t).to.contain(".txt"),e()}),it('accepts extensions with a "." in it',function(e){var t=Hoek.uniqueFilename("./test",".mp3");expect(t).to.contain("test/"),expect(t).to.contain(".mp3"),e()})}),describe("stringify()",function(){it("converts object to string",function(e){var t={a:1};expect(Hoek.stringify(t)).to.equal('{"a":1}'),e()}),it("returns error in result string",function(e){var t={a:1};t.b=t,expect(Hoek.stringify(t)).to.equal("[Cannot display object: Converting circular structure to JSON]"),e()})}),describe("shallow()",function(){it("shallow copies an object",function(e){var t={a:5,b:{c:6}},o=Hoek.shallow(t);expect(o).to.not.equal(t),expect(o).to.deep.equal(t),expect(o.b).to.equal(t.b),e()})});