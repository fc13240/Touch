function DiffieHellman(e){if(utils.assertCompatible(e,Key,[1,4],"key"),this._isPriv=PrivateKey.isPrivateKey(e,[1,3]),this._algo=e.type,this._curve=e.curve,this._key=e,"dsa"===e.type){if(!CRYPTO_HAVE_ECDH)throw new Error("Due to bugs in the node 0.10 crypto API, node 0.12.x or later is required to use DH");this._dh=crypto.createDiffieHellman(e.part.p.data,void 0,e.part.g.data,void 0),this._p=e.part.p,this._g=e.part.g,this._isPriv&&this._dh.setPrivateKey(e.part.x.data),this._dh.setPublicKey(e.part.y.data)}else if("ecdsa"===e.type){if(!CRYPTO_HAVE_ECDH)return void 0===ecdh&&(ecdh=require("ecc-jsbn")),void 0===ec&&(ec=require("ecc-jsbn/lib/ec")),void 0===jsbn&&(jsbn=require("jsbn").BigInteger),this._ecParams=new X9ECParameters(this._curve),void(this._isPriv&&(this._priv=new ECPrivate(this._ecParams,e.part.d.data)));var t={nistp256:"prime256v1",nistp384:"secp384r1",nistp521:"secp521r1"}[e.curve];if(this._dh=crypto.createECDH(t),"object"!=typeof this._dh||"function"!=typeof this._dh.setPrivateKey)return CRYPTO_HAVE_ECDH=!1,void DiffieHellman.call(this,e);this._isPriv&&this._dh.setPrivateKey(e.part.d.data),this._dh.setPublicKey(e.part.Q.data)}else{if("curve25519"!==e.type)throw new Error("DH not supported for "+e.type+" keys");void 0===ed&&(ed=require("jodid25519")),this._isPriv&&(this._priv=e.part.r.data,0===this._priv[0]&&(this._priv=this._priv.slice(1)),this._priv=this._priv.slice(0,32))}}function X9ECParameters(e){var t=algs.curves[e];assert.object(t);var i=new jsbn(t.p),r=new jsbn(t.a),a=new jsbn(t.b),s=new jsbn(t.n),h=jsbn.ONE,n=new ec.ECCurveFp(i,r,a),p=n.decodePointHex(t.G.toString("hex"));this.curve=n,this.g=p,this.n=s,this.h=h}function ECPublic(e,t){this._params=e,0===t[0]&&(t=t.slice(1)),this._pub=e.getCurve().decodePointHex(t.toString("hex"))}function ECPrivate(e,t){this._params=e,this._priv=new jsbn(utils.mpNormalize(t))}module.exports=DiffieHellman;var assert=require("assert-plus"),crypto=require("crypto"),algs=require("./algs"),utils=require("./utils"),ed,Key=require("./key"),PrivateKey=require("./private-key"),CRYPTO_HAVE_ECDH=void 0!==crypto.createECDH,ecdh,ec,jsbn;DiffieHellman.prototype.getPublicKey=function(){return this._isPriv?this._key.toPublic():this._key},DiffieHellman.prototype.getPrivateKey=function(){return this._isPriv?this._key:void 0},DiffieHellman.prototype.getKey=DiffieHellman.prototype.getPrivateKey,DiffieHellman.prototype._keyCheck=function(e,t){if(assert.object(e,"key"),t||utils.assertCompatible(e,PrivateKey,[1,3],"key"),utils.assertCompatible(e,Key,[1,4],"key"),e.type!==this._algo)throw new Error("A "+e.type+" key cannot be used in "+this._algo+" Diffie-Hellman");if(e.curve!==this._curve)throw new Error("A key from the "+e.curve+" curve cannot be used with a "+this._curve+" Diffie-Hellman");"dsa"===e.type&&(assert.deepEqual(e.part.p,this._p,"DSA key prime does not match"),assert.deepEqual(e.part.g,this._g,"DSA key generator does not match"))},DiffieHellman.prototype.setKey=function(e){this._keyCheck(e),"dsa"===e.type?(this._dh.setPrivateKey(e.part.x.data),this._dh.setPublicKey(e.part.y.data)):"ecdsa"===e.type?CRYPTO_HAVE_ECDH?(this._dh.setPrivateKey(e.part.d.data),this._dh.setPublicKey(e.part.Q.data)):this._priv=new ECPrivate(this._ecParams,e.part.d.data):"curve25519"===e.type&&(this._priv=e.part.r.data,0===this._priv[0]&&(this._priv=this._priv.slice(1)),this._priv=this._priv.slice(0,32)),this._key=e,this._isPriv=!0},DiffieHellman.prototype.setPrivateKey=DiffieHellman.prototype.setKey,DiffieHellman.prototype.computeSecret=function(e){if(this._keyCheck(e,!0),!this._isPriv)throw new Error("DH exchange has not been initialized with a private key yet");var t;if("dsa"===this._algo)return this._dh.computeSecret(e.part.y.data);if("ecdsa"===this._algo)return CRYPTO_HAVE_ECDH?this._dh.computeSecret(e.part.Q.data):(t=new ECPublic(this._ecParams,e.part.Q.data),this._priv.deriveSharedSecret(t));if("curve25519"===this._algo){t=e.part.R.data,0===t[0]&&(t=t.slice(1));var i=ed.dh.computeKey(this._priv.toString("binary"),t.toString("binary"));return new Buffer(i,"binary")}throw new Error("Invalid algorithm: "+this._algo)},DiffieHellman.prototype.generateKey=function(){var e,t,i=[];if("dsa"===this._algo)return this._dh.generateKeys(),i.push({name:"p",data:this._p.data}),i.push({name:"q",data:this._key.part.q.data}),i.push({name:"g",data:this._g.data}),i.push({name:"y",data:this._dh.getPublicKey()}),i.push({name:"x",data:this._dh.getPrivateKey()}),this._key=new PrivateKey({type:"dsa",parts:i}),this._isPriv=!0,this._key;if("ecdsa"===this._algo){if(CRYPTO_HAVE_ECDH)return this._dh.generateKeys(),i.push({name:"curve",data:new Buffer(this._curve)}),i.push({name:"Q",data:this._dh.getPublicKey()}),i.push({name:"d",data:this._dh.getPrivateKey()}),this._key=new PrivateKey({type:"ecdsa",curve:this._curve,parts:i}),this._isPriv=!0,this._key;var r=this._ecParams.getN(),a=new jsbn(crypto.randomBytes(r.bitLength())),s=r.subtract(jsbn.ONE);return e=a.mod(s).add(jsbn.ONE),t=this._ecParams.getG().multiply(e),e=new Buffer(e.toByteArray()),t=new Buffer(this._ecParams.getCurve().encodePointHex(t),"hex"),this._priv=new ECPrivate(this._ecParams,e),i.push({name:"curve",data:new Buffer(this._curve)}),i.push({name:"Q",data:t}),i.push({name:"d",data:e}),this._key=new PrivateKey({type:"ecdsa",curve:this._curve,parts:i}),this._isPriv=!0,this._key}if("curve25519"===this._algo)return e=ed.dh.generateKey(),t=ed.dh.publicKey(e),this._priv=e=new Buffer(e,"binary"),t=new Buffer(t,"binary"),i.push({name:"R",data:t}),i.push({name:"r",data:Buffer.concat([e,t])}),this._key=new PrivateKey({type:"curve25519",parts:i}),this._isPriv=!0,this._key;throw new Error("Invalid algorithm: "+this._algo)},DiffieHellman.prototype.generateKeys=DiffieHellman.prototype.generateKey,X9ECParameters.prototype.getCurve=function(){return this.curve},X9ECParameters.prototype.getG=function(){return this.g},X9ECParameters.prototype.getN=function(){return this.n},X9ECParameters.prototype.getH=function(){return this.h},ECPrivate.prototype.deriveSharedSecret=function(e){assert.ok(e instanceof ECPublic);var t=e._pub.multiply(this._priv);return new Buffer(t.getX().toBigInteger().toByteArray())};